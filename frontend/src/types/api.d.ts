/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/auth/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Inloggen */
        post: operations["auth_login_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logout */
        post: operations["auth_logout_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/health-checks/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get health checks
         * @description Obtain information about whether the application is configured correctly.
         */
        get: operations["health_checks_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/service/{slug}/catalogi/choices/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get catalogue choices
         * @description Retrieve the catalogues available in an Open Zaak instance. The value is the URL of the catalogus as returned from Open Zaak, while the label is the name of the catalogue (if configured) and otherwise the domain field.
         */
        get: operations["service_catalogi_choices_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/service/{slug}/zaaktypen/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get zaaktypen
         * @description Retrive zaaktypen from Open Zaak.
         */
        get: operations["service_zaaktypen_retrieve"];
        put?: never;
        /**
         * Create a zaaktype
         * @description Create a zaaktype.
         */
        post: operations["service_zaaktypen_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/service/{slug}/zaaktypen/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a zaaktype
         * @description Retrive a zaaktype from Open Zaak.
         */
        get: operations["service_zaaktypen_retrieve_2"];
        /**
         * Put a zaaktype
         * @description Fully update a zaaktype from Open Zaak. According to OZ specs, this should only work with draft zaaktypen. In practice, it modifies also the non-draft zaaktypen.
         */
        put: operations["service_zaaktypen_update"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Patch a zaaktype
         * @description Partially update a zaaktype from Open Zaak. According to OZ specs, this should only work with draft zaaktypen. In practice, it modifies also the non-draft zaaktypen.
         */
        patch: operations["service_zaaktypen_partial_update"];
        trace?: never;
    };
    "/api/v1/service/choices/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Open Zaak choices
         * @description Get the available Open Zaak catalogi instances. The value is the slug of the configured service, while the label is the name of the service.
         */
        get: operations["service_choices_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/whoami/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Who Am I
         * @description Returns the current logged in user.
         */
        get: operations["whoami_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AardRelatieEnum
         * @enum {unknown}
         */
        AardRelatieEnum: "bijdrage" | "onderwerp" | "vervolg";
         /**
         * AfleidingswijzeEnum
         * @enum {unknown}
         */
        AfleidingswijzeEnum: "afgehandeld" | "ander_datumkenmerk" | "eigenschap" | "gerelateerde_zaak" | "hoofdzaak" | "ingangsdatum_besluit" | "termijn" | "vervaldatum_besluit" | "zaakobject";
        /**
         * ArchiefnominatieEnum
         * @enum {unknown}
         */
        ArchiefnominatieEnum: "" | "blijvend_bewaren" | "vernietigen";
        Auth: {
            /** Gebruikersnaam */
            username: string;
            /** Wachtwoord */
            password: string;
        };
        /** BesluitType */
        BesluitType: {
            /** @description URL-referentie naar de CATALOGUS waartoe dit BESLUITTYPE behoort. */
            catalogus: string;
            /** @description Aanduiding of BESLUITen van dit BESLUITTYPE gepubliceerd moeten worden. */
            publicatieIndicatie: boolean;
            /** @description URL-referenties naar het INFORMATIEOBJECTTYPE van informatieobjecten waarin besluiten van dit BESLUITTYPE worden vastgelegd. */
            informatieobjecttypen: string[];
            /** @description De datum waarop het is ontstaan. */
            beginGeldigheid: string;
            /** @default null */
            url: string | null;
            /** @default null */
            zaaktypen: string[] | null;
            /** @default null */
            omschrijving: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            besluitcategorie: string | null;
            /** @default null */
            reactietermijn: string | null;
            /** @default null */
            publicatietekst: string | null;
            /** @default null */
            publicatietermijn: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            concept: boolean | null;
            /** @default null */
            resultaattypen: string[] | null;
            /** @default null */
            resultaattypenOmschrijving: string[] | null;
            /** @default null */
            vastgelegdIn: string[] | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        /** BronCatalogus */
        BronCatalogus: {
            /** @description Het domein van de CATALOGUS waaraan het ZAAKTYPE is ontleend. */
            domein: string;
            /** @description Het RSIN van de INGESCHREVEN NIET-NATUURLIJK PERSOON die beheerder is van de CATALOGUS waaraan het ZAAKTYPE is ontleend. */
            rsin: string;
            /** @default null */
            url: string | null;
        };
        /** BronCatalogusRequest */
        BronCatalogusRequest: {
            /** @description Het domein van de CATALOGUS waaraan het ZAAKTYPE is ontleend. */
            domein: string;
            /** @description Het RSIN van de INGESCHREVEN NIET-NATUURLIJK PERSOON die beheerder is van de CATALOGUS waaraan het ZAAKTYPE is ontleend. */
            rsin: string;
            /** @default null */
            url: string | null;
        };
        /** BronZaaktype */
        BronZaaktype: {
            /** @description De Zaaktype-identificatie van het bronzaaktype binnen de CATALOGUS. */
            identificatie: string;
            /** @description De Zaaktype-omschrijving van het bronzaaktype, zoals gehanteerd in de Broncatalogus. */
            omschrijving: string;
            /** @default null */
            url: string | null;
        };
        /** BronZaaktypeRequest */
        BronZaaktypeRequest: {
            /** @description De Zaaktype-identificatie van het bronzaaktype binnen de CATALOGUS. */
            identificatie: string;
            /** @description De Zaaktype-omschrijving van het bronzaaktype, zoals gehanteerd in de Broncatalogus. */
            omschrijving: string;
            /** @default null */
            url: string | null;
        };
        /** BrondatumArchiefprocedure */
        BrondatumArchiefprocedure: {
            /**
             * Afleidingswijze brondatum
             * @description Wijze van bepalen van de brondatum.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `afgehandeld` - (Afgehandeld) De termijn start op de datum waarop de zaak is afgehandeld (ZAAK.Einddatum in het RGBZ).
             *     * `ander_datumkenmerk` - (Ander datumkenmerk) De termijn start op de datum die is vastgelegd in een ander datumveld dan de datumvelden waarop de overige waarden (van deze attribuutsoort) betrekking hebben. `Objecttype`, `Registratie` en `Datumkenmerk` zijn niet leeg.
             *     * `eigenschap` - (Eigenschap) De termijn start op de datum die is vastgelegd in een ander datumveld dan de datumvelden waarop de overige waarden (van deze attribuutsoort) betrekking hebben. `Objecttype`, `Registratie` en `Datumkenmerk` zijn niet leeg.
             *     * `gerelateerde_zaak` - (Gerelateerde zaak) De termijn start op de datum waarop de gerelateerde zaak is afgehandeld (`ZAAK.Einddatum` of `ZAAK.Gerelateerde_zaak.Einddatum` in het RGBZ). `ResultaatType.ZaakType` heeft gerelateerd `ZaakType`
             *     * `hoofdzaak` - (Hoofdzaak) De termijn start op de datum waarop de gerelateerde zaak is afgehandeld, waarvan de zaak een deelzaak is (`ZAAK.Einddatum` van de hoofdzaak in het RGBZ). ResultaatType.ZaakType is deelzaaktype van ZaakType.
             *     * `ingangsdatum_besluit` - (Ingangsdatum besluit) De termijn start op de datum waarop het besluit van kracht wordt (`BESLUIT.Ingangsdatum` in het RGBZ).	ResultaatType.ZaakType heeft relevant BesluitType
             *     * `termijn` - (Termijn) De termijn start een vast aantal jaren na de datum waarop de zaak is afgehandeld (`ZAAK.Einddatum` in het RGBZ).
             *     * `vervaldatum_besluit` - (Vervaldatum besluit) De termijn start op de dag na de datum waarop het besluit vervalt (`BESLUIT.Vervaldatum` in het RGBZ). ResultaatType.ZaakType heeft relevant BesluitType
             *     * `zaakobject` - (Zaakobject) De termijn start op de einddatum geldigheid van het zaakobject waarop de zaak betrekking heeft (bijvoorbeeld de overlijdendatum van een Persoon). M.b.v. de attribuutsoort `Objecttype` wordt vastgelegd om welke zaakobjecttype het gaat; m.b.v. de attribuutsoort `Datumkenmerk` wordt vastgelegd welke datum-attribuutsoort van het zaakobjecttype het betreft.
             */
            afleidingswijze: components["schemas"]["AfleidingswijzeEnum"];
            /** @default null */
            datumkenmerk: string | null;
            /** @default null */
            einddatumBekend: boolean | null;
            /** @default null */
            objecttype: components["schemas"]["ObjecttypeEnum"] | null;
            /** @default null */
            registratie: string | null;
            /** @default null */
            procestermijn: string | null;
        };
        /** CheckListItem */
        CheckListItem: {
            /** @description De betekenisvolle benaming van het checklistitem */
            itemnaam: string;
            /** @description Een betekenisvolle vraag waaruit blijkt waarop het aandachtspunt gecontroleerd moet worden. */
            vraagstelling: string;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            verplicht: boolean | null;
        };
        /** DetailResponse[ExpandableZaakType] */
        DetailResponse_ExpandableZaakType_: {
            result: components["schemas"]["ExpandableZaakType"];
            fieldsets: [
                string,
                components["schemas"]["FrontendFieldSet"]
            ][];
            fields: components["schemas"]["OBField"][];
            versions?: components["schemas"]["VersionSummary"][];
        };
        /** Eigenschap */
        Eigenschap: {
            /** @description De naam van de EIGENSCHAP */
            naam: string;
            /** @description De beschrijving van de betekenis van deze EIGENSCHAP */
            definitie: string;
            specificatie: components["schemas"]["EigenschapSpecificatie"];
            /** @description URL-referentie naar het ZAAKTYPE van de ZAAKen waarvoor deze EIGENSCHAP van belang is. */
            zaaktype: string;
            /** @default null */
            url: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            zaaktypeIdentificatie: string | null;
            /** @default null */
            catalogus: string | null;
            /** @default null */
            statustype: string | null;
            /** @default null */
            beginGeldigheid: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        /** EigenschapSpecificatie */
        EigenschapSpecificatie: {
            /** @description Het soort tekens waarmee waarden van de EIGENSCHAP kunnen worden vastgelegd.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `tekst` - Tekst
             *     * `getal` - Getal
             *     * `datum` - Datum
             *     * `datum_tijd` - Datum/tijd */
            formaat: components["schemas"]["FormaatEnum"];
            /** @description Het aantal karakters (lengte) waarmee waarden van de EIGENSCHAP worden vastgelegd. */
            lengte: string;
            /** @description Het aantal mogelijke voorkomens van waarden van deze EIGENSCHAP bij een zaak van het ZAAKTYPE. */
            kardinaliteit: string;
            /** @default null */
            groep: string | null;
            /** @default null */
            waardenverzameling: string[] | null;
        };
        /** ExpandableZaakType */
        ExpandableZaakType: {
            /** @default {} */
            _expand: components["schemas"]["ZaakTypeExpansion"];
            /** @description Omschrijving van de aard van ZAAKen van het ZAAKTYPE. */
            omschrijving: string;
            /** @description Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn. Indien de zaak bij het aanmaken geen vertrouwelijkheidaanduiding krijgt, dan wordt deze waarde gezet.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `openbaar` - Openbaar
             *     * `beperkt_openbaar` - Beperkt openbaar
             *     * `intern` - Intern
             *     * `zaakvertrouwelijk` - Zaakvertrouwelijk
             *     * `vertrouwelijk` - Vertrouwelijk
             *     * `confidentieel` - Confidentieel
             *     * `geheim` - Geheim
             *     * `zeer_geheim` - Zeer geheim */
            vertrouwelijkheidaanduiding: components["schemas"]["VertrouwelijkheidaanduidingEnum"];
            /** @description Een omschrijving van hetgeen beoogd is te bereiken met een zaak van dit zaaktype. */
            doel: string;
            /** @description Een omschrijving van de gebeurtenis die leidt tot het starten van een ZAAK van dit ZAAKTYPE. */
            aanleiding: string;
            /** @description Een aanduiding waarmee onderscheid wordt gemaakt tussen ZAAKTYPEn die Intern respectievelijk Extern geïnitieerd worden. Indien van beide sprake kan zijn, dan prevaleert de externe initiatie.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `inkomend` - Inkomend
             *     * `intern` - Intern
             *     * `uitgaand` - Uitgaand */
            indicatieInternOfExtern: components["schemas"]["IndicatieInternOfExternEnum"];
            /** @description Werkwoord dat hoort bij de handeling die de initiator verricht bij dit zaaktype. Meestal 'aanvragen', 'indienen' of 'melden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_initiator */
            handelingInitiator: string;
            /** @description Het onderwerp van ZAAKen van dit ZAAKTYPE. In veel gevallen nauw gerelateerd aan de product- of dienstnaam uit de Producten- en Dienstencatalogus (PDC). Bijvoorbeeld: 'Evenementenvergunning', 'Geboorte', 'Klacht'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.onderwerp */
            onderwerp: string;
            /** @description Werkwoord dat hoort bij de handeling die de behandelaar verricht bij het afdoen van ZAAKen van dit ZAAKTYPE. Meestal 'behandelen', 'uitvoeren', 'vaststellen' of 'onderhouden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_behandelaar */
            handelingBehandelaar: string;
            /** @description De periode waarbinnen volgens wet- en regelgeving een ZAAK van het ZAAKTYPE afgerond dient te zijn, in kalenderdagen. */
            doorlooptijd: string;
            /**
             * Opschorting/aanhouding mogelijk
             * @description Aanduiding die aangeeft of ZAAKen van dit mogelijk ZAAKTYPE kunnen worden opgeschort en/of aangehouden.
             */
            opschortingEnAanhoudingMogelijk: boolean;
            /** @description Aanduiding die aangeeft of de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd. */
            verlengingMogelijk: boolean;
            /** @description Aanduiding of (het starten van) een ZAAK dit ZAAKTYPE gepubliceerd moet worden. */
            publicatieIndicatie: boolean;
            /** @description Het product of de dienst die door ZAAKen van dit ZAAKTYPE wordt voortgebracht. */
            productenOfDiensten: string[];
            /** @description Het Referentieproces dat ten grondslag ligt aan dit ZAAKTYPE. */
            referentieproces: components["schemas"]["ReferentieProces"];
            /** @description De (soort) organisatorische eenheid of (functie van) medewerker die verantwoordelijk is voor de uitvoering van zaken van het ZAAKTYPE. */
            verantwoordelijke: string;
            /** @description De datum waarop het is ontstaan. */
            beginGeldigheid: string;
            /** @description De datum waarop de (gewijzigde) kenmerken van het ZAAKTYPE geldig zijn geworden */
            versiedatum: string;
            /** @description URL-referentie naar de CATALOGUS waartoe dit ZAAKTYPE behoort. */
            catalogus: string;
            /**
             * heeft relevante besluittypen
             * @description URL-referenties naar de BESLUITTYPEN die mogelijk zijn binnen dit ZAAKTYPE.
             */
            besluittypen: string[];
            /** @description De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit ZAAKTYPE. */
            gerelateerdeZaaktypen: components["schemas"]["ZaakTypenRelatie"][];
            /** @default null */
            url: string | null;
            /** @default null */
            identificatie: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            servicenorm: string | null;
            /** @default null */
            verlengingstermijn: string | null;
            /** @default null */
            trefwoorden: string[] | null;
            /** @default null */
            publicatietekst: string | null;
            /** @default null */
            verantwoordingsrelatie: string[] | null;
            /** @default null */
            selectielijstProcestype: string | null;
            /** @default null */
            concept: boolean | null;
            /** @default null */
            broncatalogus: null | components["schemas"]["BronCatalogus"];
            /** @default null */
            bronzaaktype: null | components["schemas"]["BronZaaktype"];
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
            /** @default null */
            statustypen: string[] | null;
            /** @default null */
            resultaattypen: string[] | null;
            /** @default null */
            eigenschappen: string[] | null;
            /** @default null */
            informatieobjecttypen: string[] | null;
            /** @default null */
            roltypen: string[] | null;
            /** @default null */
            deelzaaktypen: (string | null)[] | null;
            /** @default null */
            zaakobjecttypen: string[] | null;
        };
        /** ExternalServiceError */
        ExternalServiceError: {
            code: string;
            title: string;
            detail: string;
            status: number;
        };
        /**
         * FormaatEnum
         * @enum {unknown}
         */
        FormaatEnum: "datum" | "datum_tijd" | "getal" | "tekst";
        /** FrontendFieldSet */
        FrontendFieldSet: {
            fields: string[];
            span?: number;
        };
        /** HealthCheckSerialisedError */
        HealthCheckSerialisedError: {
            code: string;
            message: string;
            /** @enum {unknown} */
            severity: "error" | "info" | "warning";
            traceback?: string;
        };
        /** HealthCheckSerialisedResult */
        HealthCheckSerialisedResult: {
            check: string;
            errors: components["schemas"]["HealthCheckSerialisedError"][];
            success: boolean;
        };
        /**
         * IndicatieInternOfExternEnum
         * @enum {unknown}
         */
        IndicatieInternOfExternEnum: "extern" | "intern";
        /** InformatieObjectType */
        InformatieObjectType: {
            /** @description URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE behoort. */
            catalogus: string;
            /** @description Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE. */
            omschrijving: string;
            /** @description Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `openbaar` - Openbaar
             *     * `beperkt_openbaar` - Beperkt openbaar
             *     * `intern` - Intern
             *     * `zaakvertrouwelijk` - Zaakvertrouwelijk
             *     * `vertrouwelijk` - Vertrouwelijk
             *     * `confidentieel` - Confidentieel
             *     * `geheim` - Geheim
             *     * `zeer_geheim` - Zeer geheim */
            vertrouwelijkheidaanduiding: components["schemas"]["VertrouwelijkheidaanduidingEnum"];
            /** @description De datum waarop het is ontstaan. */
            beginGeldigheid: string;
            /**
             * Categorie
             * @description Typering van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
             */
            informatieobjectcategorie: string;
            /** @default null */
            url: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            concept: boolean | null;
            /** @default null */
            besluittypen: string[] | null;
            /** @default null */
            trefwoord: string[] | null;
            /** @default null */
            omschrijvingGeneriek: null | components["schemas"]["OmschrijvingGeneriek"];
            /** @default null */
            zaaktypen: string[] | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        /** InvalidParam */
        InvalidParam: {
            /** @description Naam van het veld met ongeldige gegevens */
            name: string;
            /** @description Systeemcode die het type fout aangeeft */
            code: string;
            /** @description Uitleg wat er precies fout is met de gegevens */
            reason: string;
        };
        NoneType: null;
        /**
         * OBField
         * @description Used by frontend to draw list views
         */
        OBField: {
            name: string;
            type: components["schemas"]["OBFieldType"];
            filterValue?: unknown;
            /** @default  */
            filterLookup: string;
            /** @default [] */
            options: components["schemas"]["OBOption_T_"][];
        };
        /**
         * OBFieldType
         * @description Used by frontend to decide widget etc.
         * @enum {unknown}
         */
        OBFieldType: "boolean" | "date" | "number" | "string";
        /**
         * OBOption[T]
         * @description The label, value pair for when a `T` has to be presented in some selection
         */
        OBOption_T_: {
            label: string;
            value: unknown;
        };
        /**
         * OBOption[str]
         * @description The label, value pair for when a `T` has to be presented in some selection
         */
        OBOption_str_: {
            label: string;
            value: string;
        };
        /**
         * ObjecttypeEnum
         * @enum {unknown}
         */
        ObjecttypeEnum: "" | "adres" | "besluit" | "buurt" | "enkelvoudig_document" | "gemeente" | "gemeentelijke_openbare_ruimte" | "huishouden" | "inrichtingselement" | "kadastrale_onroerende_zaak" | "kunstwerkdeel" | "maatschappelijke_activiteit" | "medewerker" | "natuurlijk_persoon" | "niet_natuurlijk_persoon" | "openbare_ruimte" | "organisatorische_eenheid" | "overige" | "pand" | "spoorbaandeel" | "status" | "terrein_gebouwd_object" | "terreindeel" | "vestiging" | "waterdeel" | "wegdeel" | "wijk" | "woonplaats" | "woz_deelobject" | "woz_object" | "woz_waarde" | "zakelijk_recht";
        /** OmschrijvingGeneriek */
        OmschrijvingGeneriek: {
            /** @description Algemeen gehanteerde omschrijving van het type informatieobject. */
            informatieobjecttypeOmschrijvingGeneriek: string;
            /**
             * Definitie
             * @description Nauwkeurige beschrijving van het generieke type informatieobject
             */
            definitieInformatieobjecttypeOmschrijvingGeneriek: string;
            /**
             * Herkomst
             * @description De naam van de waardenverzameling, of van de beherende organisatie daarvan, waaruit de waarde is overgenomen.
             */
            herkomstInformatieobjecttypeOmschrijvingGeneriek: string;
            /**
             * Hierarchie
             * @description De plaats in de rangorde van het informatieobjecttype.
             */
            hierarchieInformatieobjecttypeOmschrijvingGeneriek: string;
            /** @default null */
            opmerkingInformatieobjecttypeOmschrijvingGeneriek: string | null;
        };
        /**
         * OmschrijvingGeneriekEnum
         * @enum {unknown}
         */
        OmschrijvingGeneriekEnum: "adviseur" | "behandelaar" | "belanghebbende" | "beslisser" | "initiator" | "klantcontacter" | "mede_initiator" | "zaakcoordinator";
        /** PatchedZaakTypeRequest */
        PatchedPatchedZaakTypeRequest: {
            /** @default null */
            identificatie: string | null;
            /** @default null */
            omschrijving: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            vertrouwelijkheidaanduiding: components["schemas"]["VertrouwelijkheidaanduidingEnum"] | null;
            /** @default null */
            doel: string | null;
            /** @default null */
            aanleiding: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            indicatieInternOfExtern: components["schemas"]["IndicatieInternOfExternEnum"] | null;
            /** @default null */
            handelingInitiator: string | null;
            /** @default null */
            onderwerp: string | null;
            /** @default null */
            handelingBehandelaar: string | null;
            /** @default null */
            doorlooptijd: string | null;
            /** @default null */
            servicenorm: string | null;
            /** @default null */
            opschortingEnAanhoudingMogelijk: boolean | null;
            /** @default null */
            verlengingMogelijk: boolean | null;
            /** @default null */
            verlengingstermijn: string | null;
            /** @default null */
            trefwoorden: string[] | null;
            /** @default null */
            publicatieIndicatie: boolean | null;
            /** @default null */
            publicatietekst: string | null;
            /** @default null */
            verantwoordingsrelatie: string[] | null;
            /** @default null */
            productenOfDiensten: string[] | null;
            /** @default null */
            selectielijstProcestype: string | null;
            /** @default null */
            referentieproces: null | components["schemas"]["ReferentieProcesRequest"];
            /** @default null */
            verantwoordelijke: string | null;
            /** @default null */
            broncatalogus: null | components["schemas"]["BronCatalogusRequest"];
            /** @default null */
            bronzaaktype: null | components["schemas"]["BronZaaktypeRequest"];
            /** @default null */
            beginGeldigheid: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            versiedatum: string | null;
            /** @default null */
            catalogus: string | null;
            /** @default null */
            besluittypen: string[] | null;
            /** @default null */
            deelzaaktypen: (string | null)[] | null;
            /** @default null */
            gerelateerdeZaaktypen: components["schemas"]["ZaakTypenRelatieRequest"][] | null;
        };
        /** ReferentieProces */
        ReferentieProces: {
            /**
             * Referentieprocesnaam
             * @description De naam van het Referentieproces. Zie ook de Procesarchitectuur Referentieprocessen op https://www.gemmaonline.nl/index.php/Procesarchitectuur_Referentieprocessen
             */
            naam: string;
            /** @default null */
            link: string | null;
        };
        /** ReferentieProcesRequest */
        ReferentieProcesRequest: {
            /**
             * Referentieprocesnaam
             * @description De naam van het Referentieproces. Zie ook de Procesarchitectuur Referentieprocessen op https://www.gemmaonline.nl/index.php/Procesarchitectuur_Referentieprocessen
             */
            naam: string;
            /** @default null */
            link: string | null;
        };
        /** ResultaatType */
        ResultaatType: {
            /**
             * is van
             * @description URL-referentie naar het ZAAKTYPE van ZAAKen waarin resultaten van dit RESULTAATTYPE bereikt kunnen worden.
             */
            zaaktype: string;
            /** @description Omschrijving van de aard van resultaten van het RESULTAATTYPE. */
            omschrijving: string;
            /** @description Algemeen gehanteerde omschrijving van de aard van resultaten van het RESULTAATTYPE. Dit moet een URL-referentie zijn naar de referenlijst van generieke resultaattypeomschrijvingen. Im ImZTC heet dit 'omschrijving generiek' */
            resultaattypeomschrijving: string;
            /** @description URL-referentie naar de, voor het archiefregime bij het RESULTAATTYPE relevante, categorie in de Selectielijst Archiefbescheiden (RESULTAAT in de Selectielijst API) van de voor het ZAAKTYPE verantwoordelijke overheidsorganisatie. */
            selectielijstklasse: string;
            /** @default null */
            url: string | null;
            /** @default null */
            zaaktypeIdentificatie: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            archiefnominatie: components["schemas"]["ArchiefnominatieEnum"] | null;
            /** @default null */
            archiefactietermijn: string | null;
            /** @default null */
            brondatumArchiefprocedure: null | components["schemas"]["BrondatumArchiefprocedure"];
            /** @default null */
            procesobjectaard: string | null;
            /** @default null */
            indicatieSpecifiek: boolean | null;
            /** @default null */
            procestermijn: string | null;
            /** @default null */
            catalogus: string | null;
            /** @default null */
            besluittypen: (string | null)[] | null;
            /** @default null */
            besluittypeOmschrijving: string[] | null;
            /** @default null */
            informatieobjecttypen: (string | null)[] | null;
            /** @default null */
            informatieobjecttypeOmschrijving: string[] | null;
            /** @default null */
            beginGeldigheid: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        /** RolType */
        RolType: {
            /** @description URL-referentie naar het ZAAKTYPE waar deze ROLTYPEn betrokken kunnen zijn. */
            zaaktype: string;
            /** @description Omschrijving van de aard van de ROL. */
            omschrijving: string;
            /** @description Algemeen gehanteerde omschrijving van de aard van de ROL.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `adviseur` - (Adviseur) Kennis in dienst stellen van de behandeling van (een deel van) een zaak.
             *     * `behandelaar` - (Behandelaar) De vakinhoudelijke behandeling doen van (een deel van) een zaak.
             *     * `belanghebbende` - (Belanghebbende) Vanuit eigen en objectief belang rechtstreeks betrokken zijn bij de behandeling en/of de uitkomst van een zaak.
             *     * `beslisser` - (Beslisser) Nemen van besluiten die voor de uitkomst van een zaak noodzakelijk zijn.
             *     * `initiator` - (Initiator) Aanleiding geven tot de start van een zaak ..
             *     * `klantcontacter` - (Klantcontacter) Het eerste aanspreekpunt zijn voor vragen van burgers en bedrijven ..
             *     * `zaakcoordinator` - (Zaakcoördinator) Er voor zorg dragen dat de behandeling van de zaak in samenhang uitgevoerd wordt conform de daarover gemaakte afspraken.
             *     * `mede_initiator` - (Mede-initiator)  */
            omschrijvingGeneriek: components["schemas"]["OmschrijvingGeneriekEnum"];
            /** @default null */
            url: string | null;
            /** @default null */
            zaaktypeIdentificatie: string | null;
            /** @default null */
            catalogus: string | null;
            /** @default null */
            beginGeldigheid: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        /**
         * Status
         * @enum {unknown}
         */
        Status: "alles" | "concept" | "definitief";
        /** StatusType */
        StatusType: {
            /** @description Een korte, voor de initiator van de zaak relevante, omschrijving van de aard van de STATUS van zaken van een ZAAKTYPE. */
            omschrijving: string;
            /** @description URL-referentie naar het ZAAKTYPE van ZAAKen waarin STATUSsen van dit STATUSTYPE bereikt kunnen worden. */
            zaaktype: string;
            /** @description Een volgnummer voor statussen van het STATUSTYPE binnen een zaak. */
            volgnummer: number;
            /** @default null */
            url: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            statustekst: string | null;
            /** @default null */
            zaaktypeIdentificatie: string | null;
            /** @default null */
            isEindstatus: boolean | null;
            /** @default null */
            informeren: boolean | null;
            /** @default null */
            doorlooptijd: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            checklistitemStatustype: components["schemas"]["CheckListItem"][] | null;
            /** @default null */
            catalogus: string | null;
            /** @default null */
            eigenschappen: string[] | null;
            /** @default null */
            zaakobjecttypen: string[] | null;
            /** @default null */
            beginGeldigheid: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        User: {
            /** ID */
            readonly pk: number;
            /**
             * Gebruikersnaam
             * @description Vereist. 150 tekens of minder. Alleen letters, cijfers en de tekens @/,/+/-/_ zijn toegestaan.
             */
            username: string;
            /** Voornaam */
            firstName?: string;
            /** Achternaam */
            lastName?: string;
            /**
             * E-mailadres
             * Format: email
             */
            email?: string;
        };
        /**
         * VersionSummary
         * @description Summary of the different version of a ZTC resource.
         *
         *     # TODO: what do we need to show per version?
         */
        VersionSummary: {
            uuid: string;
            beginGeldigheid: string;
            eindeGeldigheid: string | null;
            concept: boolean | null;
        };
        /**
         * VertrouwelijkheidaanduidingEnum
         * @enum {unknown}
         */
        VertrouwelijkheidaanduidingEnum: "beperkt_openbaar" | "confidentieel" | "geheim" | "intern" | "openbaar" | "vertrouwelijk" | "zaakvertrouwelijk" | "zeer_geheim";
        /** ZGWError */
        ZGWError: {
            /** @description Systeemcode die het type fout aangeeft */
            code: string;
            /** @description Generieke titel voor het type fout */
            title: string;
            /** @description De HTTP status code */
            status: number;
            /** @description Extra informatie bij de fout, indien beschikbaar */
            detail: string;
            /** @description URI met referentie naar dit specifiek voorkomen van de fout. Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld. */
            instance: string;
            invalidParams?: components["schemas"]["InvalidParam"][];
            /** @default null */
            type: string | null;
        };
        /** ZGWResponse[ZaakTypeSummary] */
        ZGWResponse_ZaakTypeSummary_: {
            count: number;
            next: string | null;
            previous: string | null;
            results: components["schemas"]["ZaakTypeSummary"][];
        };
        /** ZaakObjectType */
        ZaakObjectType: {
            /** @description Aanduiding waarmee wordt aangegeven of het ZAAKOBJECTTYPE een ander, niet in RSGB en RGBZ voorkomend, objecttype betreft. */
            anderObjecttype: boolean;
            /** @description URL-referentie naar de OBJECTTYPE waartoe dit ZAAKOBJECTTYPE behoort. */
            objecttype: string;
            /** @description Omschrijving van de betrekking van het Objecttype op zaken van het gerelateerde ZAAKTYPE. */
            relatieOmschrijving: string;
            /** @description URL-referentie naar de ZAAKTYPE waartoe dit ZAAKOBJECTTYPE behoort. */
            zaaktype: string;
            /** @default null */
            url: string | null;
            /** @default null */
            zaaktypeIdentificatie: string | null;
            /** @default null */
            resultaattypen: string[] | null;
            /** @default null */
            statustype: string | null;
            /** @default null */
            catalogus: string | null;
            /** @default null */
            beginGeldigheid: string | null;
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
        };
        /** ZaakType */
        ZaakType: {
            /** @description Omschrijving van de aard van ZAAKen van het ZAAKTYPE. */
            omschrijving: string;
            /** @description Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn. Indien de zaak bij het aanmaken geen vertrouwelijkheidaanduiding krijgt, dan wordt deze waarde gezet.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `openbaar` - Openbaar
             *     * `beperkt_openbaar` - Beperkt openbaar
             *     * `intern` - Intern
             *     * `zaakvertrouwelijk` - Zaakvertrouwelijk
             *     * `vertrouwelijk` - Vertrouwelijk
             *     * `confidentieel` - Confidentieel
             *     * `geheim` - Geheim
             *     * `zeer_geheim` - Zeer geheim */
            vertrouwelijkheidaanduiding: components["schemas"]["VertrouwelijkheidaanduidingEnum"];
            /** @description Een omschrijving van hetgeen beoogd is te bereiken met een zaak van dit zaaktype. */
            doel: string;
            /** @description Een omschrijving van de gebeurtenis die leidt tot het starten van een ZAAK van dit ZAAKTYPE. */
            aanleiding: string;
            /** @description Een aanduiding waarmee onderscheid wordt gemaakt tussen ZAAKTYPEn die Intern respectievelijk Extern geïnitieerd worden. Indien van beide sprake kan zijn, dan prevaleert de externe initiatie.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `inkomend` - Inkomend
             *     * `intern` - Intern
             *     * `uitgaand` - Uitgaand */
            indicatieInternOfExtern: components["schemas"]["IndicatieInternOfExternEnum"];
            /** @description Werkwoord dat hoort bij de handeling die de initiator verricht bij dit zaaktype. Meestal 'aanvragen', 'indienen' of 'melden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_initiator */
            handelingInitiator: string;
            /** @description Het onderwerp van ZAAKen van dit ZAAKTYPE. In veel gevallen nauw gerelateerd aan de product- of dienstnaam uit de Producten- en Dienstencatalogus (PDC). Bijvoorbeeld: 'Evenementenvergunning', 'Geboorte', 'Klacht'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.onderwerp */
            onderwerp: string;
            /** @description Werkwoord dat hoort bij de handeling die de behandelaar verricht bij het afdoen van ZAAKen van dit ZAAKTYPE. Meestal 'behandelen', 'uitvoeren', 'vaststellen' of 'onderhouden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_behandelaar */
            handelingBehandelaar: string;
            /** @description De periode waarbinnen volgens wet- en regelgeving een ZAAK van het ZAAKTYPE afgerond dient te zijn, in kalenderdagen. */
            doorlooptijd: string;
            /**
             * Opschorting/aanhouding mogelijk
             * @description Aanduiding die aangeeft of ZAAKen van dit mogelijk ZAAKTYPE kunnen worden opgeschort en/of aangehouden.
             */
            opschortingEnAanhoudingMogelijk: boolean;
            /** @description Aanduiding die aangeeft of de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd. */
            verlengingMogelijk: boolean;
            /** @description Aanduiding of (het starten van) een ZAAK dit ZAAKTYPE gepubliceerd moet worden. */
            publicatieIndicatie: boolean;
            /** @description Het product of de dienst die door ZAAKen van dit ZAAKTYPE wordt voortgebracht. */
            productenOfDiensten: string[];
            /** @description Het Referentieproces dat ten grondslag ligt aan dit ZAAKTYPE. */
            referentieproces: components["schemas"]["ReferentieProces"];
            /** @description De (soort) organisatorische eenheid of (functie van) medewerker die verantwoordelijk is voor de uitvoering van zaken van het ZAAKTYPE. */
            verantwoordelijke: string;
            /** @description De datum waarop het is ontstaan. */
            beginGeldigheid: string;
            /** @description De datum waarop de (gewijzigde) kenmerken van het ZAAKTYPE geldig zijn geworden */
            versiedatum: string;
            /** @description URL-referentie naar de CATALOGUS waartoe dit ZAAKTYPE behoort. */
            catalogus: string;
            /**
             * heeft relevante besluittypen
             * @description URL-referenties naar de BESLUITTYPEN die mogelijk zijn binnen dit ZAAKTYPE.
             */
            besluittypen: string[];
            /** @description De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit ZAAKTYPE. */
            gerelateerdeZaaktypen: components["schemas"]["ZaakTypenRelatie"][];
            /** @default null */
            url: string | null;
            /** @default null */
            identificatie: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            servicenorm: string | null;
            /** @default null */
            verlengingstermijn: string | null;
            /** @default null */
            trefwoorden: string[] | null;
            /** @default null */
            publicatietekst: string | null;
            /** @default null */
            verantwoordingsrelatie: string[] | null;
            /** @default null */
            selectielijstProcestype: string | null;
            /** @default null */
            concept: boolean | null;
            /** @default null */
            broncatalogus: null | components["schemas"]["BronCatalogus"];
            /** @default null */
            bronzaaktype: null | components["schemas"]["BronZaaktype"];
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            beginObject: string | null;
            /** @default null */
            eindeObject: string | null;
            /** @default null */
            statustypen: string[] | null;
            /** @default null */
            resultaattypen: string[] | null;
            /** @default null */
            eigenschappen: string[] | null;
            /** @default null */
            informatieobjecttypen: string[] | null;
            /** @default null */
            roltypen: string[] | null;
            /** @default null */
            deelzaaktypen: (string | null)[] | null;
            /** @default null */
            zaakobjecttypen: string[] | null;
        };
        /** ZaakTypeExpansion */
        ZaakTypeExpansion: {
            besluittypen?: components["schemas"]["BesluitType"][];
            statustypen?: components["schemas"]["StatusType"][];
            resultaattypen?: components["schemas"]["ResultaatType"][];
            eigenschappen?: components["schemas"]["Eigenschap"][];
            informatieobjecttypen?: components["schemas"]["InformatieObjectType"][];
            roltypen?: components["schemas"]["RolType"][];
            zaakobjecttypen?: components["schemas"]["ZaakObjectType"][];
        };
        /** ZaakTypeRequest */
        ZaakTypeRequest: {
            /** @description Omschrijving van de aard van ZAAKen van het ZAAKTYPE. */
            omschrijving: string;
            /** @description Aanduiding van de mate waarin zaakdossiers van ZAAKen van dit ZAAKTYPE voor de openbaarheid bestemd zijn. Indien de zaak bij het aanmaken geen vertrouwelijkheidaanduiding krijgt, dan wordt deze waarde gezet.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `openbaar` - Openbaar
             *     * `beperkt_openbaar` - Beperkt openbaar
             *     * `intern` - Intern
             *     * `zaakvertrouwelijk` - Zaakvertrouwelijk
             *     * `vertrouwelijk` - Vertrouwelijk
             *     * `confidentieel` - Confidentieel
             *     * `geheim` - Geheim
             *     * `zeer_geheim` - Zeer geheim */
            vertrouwelijkheidaanduiding: components["schemas"]["VertrouwelijkheidaanduidingEnum"];
            /** @description Een omschrijving van hetgeen beoogd is te bereiken met een zaak van dit zaaktype. */
            doel: string;
            /** @description Een omschrijving van de gebeurtenis die leidt tot het starten van een ZAAK van dit ZAAKTYPE. */
            aanleiding: string;
            /** @description Een aanduiding waarmee onderscheid wordt gemaakt tussen ZAAKTYPEn die Intern respectievelijk Extern geïnitieerd worden. Indien van beide sprake kan zijn, dan prevaleert de externe initiatie.
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `inkomend` - Inkomend
             *     * `intern` - Intern
             *     * `uitgaand` - Uitgaand */
            indicatieInternOfExtern: components["schemas"]["IndicatieInternOfExternEnum"];
            /** @description Werkwoord dat hoort bij de handeling die de initiator verricht bij dit zaaktype. Meestal 'aanvragen', 'indienen' of 'melden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_initiator */
            handelingInitiator: string;
            /** @description Het onderwerp van ZAAKen van dit ZAAKTYPE. In veel gevallen nauw gerelateerd aan de product- of dienstnaam uit de Producten- en Dienstencatalogus (PDC). Bijvoorbeeld: 'Evenementenvergunning', 'Geboorte', 'Klacht'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.onderwerp */
            onderwerp: string;
            /** @description Werkwoord dat hoort bij de handeling die de behandelaar verricht bij het afdoen van ZAAKen van dit ZAAKTYPE. Meestal 'behandelen', 'uitvoeren', 'vaststellen' of 'onderhouden'. Zie ook het IOB model op https://www.gemmaonline.nl/index.php/Imztc_2.1/doc/attribuutsoort/zaaktype.handeling_behandelaar */
            handelingBehandelaar: string;
            /** @description De periode waarbinnen volgens wet- en regelgeving een ZAAK van het ZAAKTYPE afgerond dient te zijn, in kalenderdagen. */
            doorlooptijd: string;
            /**
             * Opschorting/aanhouding mogelijk
             * @description Aanduiding die aangeeft of ZAAKen van dit mogelijk ZAAKTYPE kunnen worden opgeschort en/of aangehouden.
             */
            opschortingEnAanhoudingMogelijk: boolean;
            /** @description Aanduiding die aangeeft of de Doorlooptijd behandeling van ZAAKen van dit ZAAKTYPE kan worden verlengd. */
            verlengingMogelijk: boolean;
            /** @description Aanduiding of (het starten van) een ZAAK dit ZAAKTYPE gepubliceerd moet worden. */
            publicatieIndicatie: boolean;
            /** @description Het product of de dienst die door ZAAKen van dit ZAAKTYPE wordt voortgebracht. */
            productenOfDiensten: string[];
            /** @description Het Referentieproces dat ten grondslag ligt aan dit ZAAKTYPE. */
            referentieproces: components["schemas"]["ReferentieProcesRequest"];
            /** @description De (soort) organisatorische eenheid of (functie van) medewerker die verantwoordelijk is voor de uitvoering van zaken van het ZAAKTYPE. */
            verantwoordelijke: string;
            /** @description De datum waarop het is ontstaan. */
            beginGeldigheid: string;
            /** @description De datum waarop de (gewijzigde) kenmerken van het ZAAKTYPE geldig zijn geworden */
            versiedatum: string;
            /** @description URL-referentie naar de CATALOGUS waartoe dit ZAAKTYPE behoort. */
            catalogus: string;
            /**
             * heeft relevante besluittypen
             * @description URL-referenties naar de BESLUITTYPEN die mogelijk zijn binnen dit ZAAKTYPE.
             */
            besluittypen: string[];
            /** @description De ZAAKTYPEn van zaken die relevant zijn voor zaken van dit ZAAKTYPE. */
            gerelateerdeZaaktypen: components["schemas"]["ZaakTypenRelatieRequest"][];
            /** @default null */
            identificatie: string | null;
            /** @default null */
            omschrijvingGeneriek: string | null;
            /** @default null */
            toelichting: string | null;
            /** @default null */
            servicenorm: string | null;
            /** @default null */
            verlengingstermijn: string | null;
            /** @default null */
            trefwoorden: string[] | null;
            /** @default null */
            publicatietekst: string | null;
            /** @default null */
            verantwoordingsrelatie: string[] | null;
            /** @default null */
            selectielijstProcestype: string | null;
            /** @default null */
            broncatalogus: null | components["schemas"]["BronCatalogusRequest"];
            /** @default null */
            bronzaaktype: null | components["schemas"]["BronZaaktypeRequest"];
            /** @default null */
            eindeGeldigheid: string | null;
            /** @default null */
            deelzaaktypen: (string | null)[] | null;
        };
        /** ZaakTypeSummary */
        ZaakTypeSummary: {
            url: string;
            identificatie: string;
            omschrijving: string;
            actief?: boolean;
            /** @default null */
            eindeGeldigheid: string | null;
            vertrouwelijkheidaanduiding: string;
            /** Format: date */
            versiedatum: string;
        };
        /** ZaakTypenRelatie */
        ZaakTypenRelatie: {
            /** @description URL referentie naar het gerelateerde zaaktype, mogelijks in een extern ZTC. */
            zaaktype: string;
            /** @description Omschrijving van de aard van de relatie van zaken van het ZAAKTYPE tot zaken van het andere ZAAKTYPE
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `vervolg` - Vervolg
             *     * `bijdrage` - Bijdrage
             *     * `onderwerp` - Onderwerp */
            aardRelatie: components["schemas"]["AardRelatieEnum"];
            /** @default null */
            toelichting: string | null;
        };
        /** ZaakTypenRelatieRequest */
        ZaakTypenRelatieRequest: {
            /** @description URL referentie naar het gerelateerde zaaktype, mogelijks in een extern ZTC. */
            zaaktype: string;
            /** @description Omschrijving van de aard van de relatie van zaken van het ZAAKTYPE tot zaken van het andere ZAAKTYPE
             *
             *     Uitleg bij mogelijke waarden:
             *
             *     * `vervolg` - Vervolg
             *     * `bijdrage` - Bijdrage
             *     * `onderwerp` - Onderwerp */
            aardRelatie: components["schemas"]["AardRelatieEnum"];
            /** @default null */
            toelichting: string | null;
        };
        list_HealthCheckSerialisedResult: components["schemas"]["HealthCheckSerialisedResult"][];
        list_OBOption_str_: components["schemas"]["OBOption_str_"][];
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    auth_login_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Auth"];
                "application/x-www-form-urlencoded": components["schemas"]["Auth"];
                "multipart/form-data": components["schemas"]["Auth"];
            };
        };
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    auth_logout_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    health_checks_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["list_HealthCheckSerialisedResult"];
                };
            };
        };
    };
    service_catalogi_choices_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["list_OBOption_str_"];
                };
            };
            502: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalServiceError"];
                };
            };
            504: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalServiceError"];
                };
            };
        };
    };
    service_zaaktypen_retrieve: {
        parameters: {
            query?: {
                catalogus?: string;
                datumGeldigheid?: string;
                identificatie?: string;
                page?: number;
                status?: components["schemas"]["Status"];
                trefwoorden?: string;
            };
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZGWResponse_ZaakTypeSummary_"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZGWError"];
                };
            };
            502: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalServiceError"];
                };
            };
            504: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalServiceError"];
                };
            };
        };
    };
    service_zaaktypen_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ZaakTypeRequest"];
                "application/x-www-form-urlencoded": components["schemas"]["ZaakTypeRequest"];
                "multipart/form-data": components["schemas"]["ZaakTypeRequest"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZaakType"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZGWError"];
                };
            };
        };
    };
    service_zaaktypen_retrieve_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DetailResponse_ExpandableZaakType_"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZGWError"];
                };
            };
        };
    };
    service_zaaktypen_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
                uuid: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ZaakTypeRequest"];
                "application/x-www-form-urlencoded": components["schemas"]["ZaakTypeRequest"];
                "multipart/form-data": components["schemas"]["ZaakTypeRequest"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DetailResponse_ExpandableZaakType_"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZGWError"];
                };
            };
        };
    };
    service_zaaktypen_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPatchedZaakTypeRequest"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPatchedZaakTypeRequest"];
                "multipart/form-data": components["schemas"]["PatchedPatchedZaakTypeRequest"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DetailResponse_ExpandableZaakType_"];
                };
            };
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZGWError"];
                };
            };
        };
    };
    service_choices_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["list_OBOption_str_"];
                };
            };
        };
    };
    whoami_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
}
