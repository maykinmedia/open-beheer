[project]
requires-python = "3.12"

[tool.bumpversion]
current_version = "0.1.0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)\\.      # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}.{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "{new_version}"
tag_message = ":bookmark: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.bumpversion.parts.pre_l]
values = ["", "alpha", "beta", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "src/openbeheer/__init__.py"

[[tool.bumpversion.files]]
filename = "../README.rst"
search = ":Version: {current_version}"
replace = ":Version: {new_version}"

[[tool.bumpversion.files]]
filename = "src/openbeheer/conf/base.py"
search = "API_VERSION = \"{current_version}\""
replace = "API_VERSION = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "../frontend/package.json"
search = "\"version\": \"{current_version}\""
replace = "\"version\": \"{new_version}\""