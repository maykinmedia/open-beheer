# generated by datamodel-codegen:
#   filename:  https://selectielijst.openzaak.nl/api/v1/schema/openapi.json
#   timestamp: 2025-08-15T10:54:09+00:00
#   version:   0.30.1

from __future__ import annotations

from enum import Enum
from typing import TYPE_CHECKING, Annotated, List

from msgspec import Meta, Struct, field

if TYPE_CHECKING:
    from datetime import timedelta


class ProcesType(Struct, kw_only=True):
    nummer: Annotated[
        int,
        Meta(
            description="Nummer van de selectielijstcategorie",
            ge=0,
            le=32767,
            title="Procestypenummer",
        ),
    ]
    jaar: Annotated[
        int,
        Meta(
            description="Het jaartal waartoe dit ProcesType behoort",
            ge=0,
            le=2147483647,
            title="Jaar",
        ),
    ]
    naam: Annotated[
        str,
        Meta(
            description="Benaming van het procestype",
            max_length=100,
            min_length=1,
            title="Procestypenaam",
        ),
    ]
    omschrijving: Annotated[
        str,
        Meta(
            description="Omschrijving van het procestype",
            max_length=300,
            min_length=1,
            title="Procestypeomschrijving",
        ),
    ]
    toelichting: Annotated[
        str,
        Meta(
            description="Toelichting van het procestype",
            min_length=1,
            title="Procestypetoelichting",
        ),
    ]
    procesobject: Annotated[
        str,
        Meta(
            description="Object waar de uitvoering van het proces op van toepassing is en waarvan de bestaans- of geldigheidsduur eventueel van belang is bij het bepalen van de start van de bewaartermijn",
            max_length=80,
            min_length=1,
            title="Procesobject",
        ),
    ]
    url: (
        Annotated[
            str,
            Meta(
                description="URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object.",
                max_length=1000,
                min_length=1,
                title="Url",
            ),
        ]
        | None
    ) = None


class Fout(Struct, kw_only=True):
    code: Annotated[
        str,
        Meta(
            description="Systeemcode die het type fout aangeeft",
            min_length=1,
            title="Code",
        ),
    ]
    title: Annotated[
        str,
        Meta(
            description="Generieke titel voor het type fout",
            min_length=1,
            title="Title",
        ),
    ]
    status: Annotated[int, Meta(description="De HTTP status code", title="Status")]
    detail: Annotated[
        str,
        Meta(
            description="Extra informatie bij de fout, indien beschikbaar",
            min_length=1,
            title="Detail",
        ),
    ]
    instance: Annotated[
        str,
        Meta(
            description="URI met referentie naar dit specifiek voorkomen van de fout. Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld.",
            min_length=1,
            title="Instance",
        ),
    ]
    type: (
        Annotated[
            str,
            Meta(
                description="URI referentie naar het type fout, bedoeld voor developers",
                title="Type",
            ),
        ]
        | None
    ) = None


class FieldValidationError(Struct, kw_only=True):
    name: Annotated[
        str,
        Meta(
            description="Naam van het veld met ongeldige gegevens",
            min_length=1,
            title="Name",
        ),
    ]
    code: Annotated[
        str,
        Meta(
            description="Systeemcode die het type fout aangeeft",
            min_length=1,
            title="Code",
        ),
    ]
    reason: Annotated[
        str,
        Meta(
            description="Uitleg wat er precies fout is met de gegevens",
            min_length=1,
            title="Reason",
        ),
    ]


class ValidatieFout(Struct, kw_only=True):
    code: Annotated[
        str,
        Meta(
            description="Systeemcode die het type fout aangeeft",
            min_length=1,
            title="Code",
        ),
    ]
    title: Annotated[
        str,
        Meta(
            description="Generieke titel voor het type fout",
            min_length=1,
            title="Title",
        ),
    ]
    status: Annotated[int, Meta(description="De HTTP status code", title="Status")]
    detail: Annotated[
        str,
        Meta(
            description="Extra informatie bij de fout, indien beschikbaar",
            min_length=1,
            title="Detail",
        ),
    ]
    instance: Annotated[
        str,
        Meta(
            description="URI met referentie naar dit specifiek voorkomen van de fout. Deze kan gebruikt worden in combinatie met server logs, bijvoorbeeld.",
            min_length=1,
            title="Instance",
        ),
    ]
    invalid_params: List[FieldValidationError] = field(name="invalidParams")
    type: (
        Annotated[
            str,
            Meta(
                description="URI referentie naar het type fout, bedoeld voor developers",
                title="Type",
            ),
        ]
        | None
    ) = None


class ResultaatTypeOmschrijvingGeneriek(Struct, kw_only=True):
    omschrijving: Annotated[
        str,
        Meta(
            description="Algemeen gehanteerde omschrijvingen van de aard van het resultaat van zaken",
            max_length=20,
            min_length=1,
            title="Omschrijving",
        ),
    ]
    definitie: Annotated[
        str,
        Meta(
            description="Nauwkeurige beschrijving van het generieke type resultaat.",
            max_length=255,
            min_length=1,
            title="Definitie",
        ),
    ]
    url: (
        Annotated[
            str,
            Meta(
                description="URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object.",
                max_length=1000,
                min_length=1,
                title="Url",
            ),
        ]
        | None
    ) = None
    opmerking: (
        Annotated[
            str,
            Meta(
                description="Zinvolle toelichting bij de waarde van de generieke omschrijving van het resultaat.",
                max_length=255,
                title="Opmerking",
            ),
        ]
        | None
    ) = None


class Waardering(Enum):
    blijvend_bewaren = "blijvend_bewaren"
    vernietigen = "vernietigen"


class Procestermijn(Enum):
    nihil = "nihil"
    bestaansduur_procesobject = "bestaansduur_procesobject"
    ingeschatte_bestaansduur_procesobject = "ingeschatte_bestaansduur_procesobject"
    vast_te_leggen_datum = "vast_te_leggen_datum"
    samengevoegd_met_bewaartermijn = "samengevoegd_met_bewaartermijn"


class Resultaat(Struct, kw_only=True):
    nummer: Annotated[
        int,
        Meta(
            description="Nummer van het resultaat. Dit wordt samengesteld met het procestype en generiek resultaat indien van toepassing.",
            ge=0,
            le=32767,
            title="Nummer",
        ),
    ]
    naam: Annotated[
        str,
        Meta(
            description="Benaming van het procestype",
            max_length=40,
            min_length=1,
            title="Naam",
        ),
    ]
    herkomst: Annotated[
        str,
        Meta(
            description="Voorbeeld: 'Risicoanalyse', 'Systeemanalyse' of verwijzing naar Wet- en regelgeving",
            max_length=200,
            min_length=1,
            title="Herkomst",
        ),
    ]
    waardering: Annotated[Waardering, Meta(title="Waardering")]
    url: (
        Annotated[
            str,
            Meta(
                description="URL-referentie naar dit object. Dit is de unieke identificatie en locatie van dit object.",
                max_length=1000,
                min_length=1,
                title="Url",
            ),
        ]
        | None
    ) = None
    proces_type: Annotated[str, Meta(title="Proces type")] | None = field(
        name="procesType", default=None
    )
    volledig_nummer: Annotated[str, Meta(title="Volledig nummer")] | None = field(
        name="volledigNummer", default=None
    )
    generiek: Annotated[bool, Meta(title="Generiek")] | None = None
    specifiek: Annotated[bool, Meta(title="Specifiek")] | None = None
    omschrijving: (
        Annotated[
            str,
            Meta(
                description="Omschrijving van het specifieke resultaat",
                max_length=150,
                title="Omschrijving",
            ),
        ]
        | None
    ) = None
    procestermijn: (
        Annotated[
            Procestermijn,
            Meta(
                description="Uitleg bij mogelijke waarden:\n\n* `nihil` - Nihil\n* `bestaansduur_procesobject` - De bestaans- of geldigheidsduur van het procesobject.\n* `ingeschatte_bestaansduur_procesobject` - De ingeschatte maximale bestaans- of geldigheidsduur van het procesobject.\n* `vast_te_leggen_datum` - De tijdens het proces vast te leggen datum waarop de geldigheid van het procesobject komt te vervallen. \n* `samengevoegd_met_bewaartermijn` - De procestermijn is samengevoegd met de bewaartermijn.",
                title="Procestermijn",
            ),
        ]
        | None
    ) = None
    procestermijn_weergave: (
        Annotated[str, Meta(min_length=1, title="Procestermijn weergave")] | None
    ) = field(name="procestermijnWeergave", default=None)
    bewaartermijn: Annotated[timedelta, Meta(title="Bewaartermijn")] | None = None
    toelichting: Annotated[str, Meta(title="Toelichting")] | None = None
    algemeen_bestuur_en_inrichting_organisatie: (
        Annotated[bool, Meta(title="Algemeen bestuur en inrichting organisatie")] | None
    ) = field(name="algemeenBestuurEnInrichtingOrganisatie", default=None)
    bedrijfsvoering_en_personeel: (
        Annotated[bool, Meta(title="Bedrijfsvoering en personeel")] | None
    ) = field(name="bedrijfsvoeringEnPersoneel", default=None)
    publieke_informatie_en_registratie: (
        Annotated[bool, Meta(title="Publieke informatie en registratie")] | None
    ) = field(name="publiekeInformatieEnRegistratie", default=None)
    burgerzaken: Annotated[bool, Meta(title="Burgerzaken")] | None = None
    veiligheid: Annotated[bool, Meta(title="Veiligheid")] | None = None
    verkeer_en_vervoer: Annotated[bool, Meta(title="Verkeer en vervoer")] | None = (
        field(name="verkeerEnVervoer", default=None)
    )
    economie: Annotated[bool, Meta(title="Economie")] | None = None
    onderwijs: Annotated[bool, Meta(title="Onderwijs")] | None = None
    sport_cultuur_en_recreatie: (
        Annotated[bool, Meta(title="Sport, cultuur en recreatie")] | None
    ) = field(name="sportCultuurEnRecreatie", default=None)
    sociaal_domein: Annotated[bool, Meta(title="Sociaal domein")] | None = field(
        name="sociaalDomein", default=None
    )
    volksgezonheid_en_milieu: (
        Annotated[bool, Meta(title="Volksgezonheid en milieu")] | None
    ) = field(name="volksgezonheidEnMilieu", default=None)
    vhrosv: Annotated[bool, Meta(title="VHROSV")] | None = None
    heffen_belastingen: (
        Annotated[bool, Meta(title="Heffen belastingen etc.")] | None
    ) = field(name="heffenBelastingen", default=None)
    alle_taakgebieden: Annotated[bool, Meta(title="Alle taakgebieden")] | None = field(
        name="alleTaakgebieden", default=None
    )
    procestermijn_opmerking: (
        Annotated[
            str,
            Meta(
                description="Voorbeeld: '25 jaar', '30 jaar, '5 of 10 jaar'",
                max_length=20,
                title="Procestermijn opmerking",
            ),
        ]
        | None
    ) = field(name="procestermijnOpmerking", default=None)


class ProcestypenGetParametersQuery(Struct, kw_only=True):
    jaar: float | None = None


ProcestypenGetResponse = List[ProcesType]


ResultaattypeomschrijvingenGetResponse = List[ResultaatTypeOmschrijvingGeneriek]


class ResultatenGetParametersQuery(Struct, kw_only=True):
    proces_type: str | None = field(name="procesType", default=None)
    page: int | None = None


class ResultatenGetResponse(Struct, kw_only=True):
    count: int
    results: List[Resultaat]
    next: str | None = None
    previous: str | None = None
