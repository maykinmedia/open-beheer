2025-04-04 16:49:44,911 INFO django.utils.autoreload autoreload 132115 128329710799744  Watching for file changes with StatReloader
2025-04-04 16:51:15,538 INFO django.utils.autoreload autoreload 132349 127455866997632  Watching for file changes with StatReloader
2025-04-04 16:51:15,793 DEBUG django.db.backends utils 132349 127455538091712  (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
2025-04-04 16:51:26,115 DEBUG django.db.backends utils 132449 137884488309632  (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
2025-04-04 16:51:26,117 DEBUG django.db.backends utils 132449 137884488309632  (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
2025-04-04 16:51:26,118 DEBUG django.db.backends utils 132449 137884488309632  (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
2025-04-04 16:51:26,118 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,118 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
2025-04-04 16:51:26,131 DEBUG django.db.backends utils 132449 137884488309632  (0.012) CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
2025-04-04 16:51:26,132 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,132 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,133 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
2025-04-04 16:51:26,136 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
2025-04-04 16:51:26,137 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
2025-04-04 16:51:26,139 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
2025-04-04 16:51:26,140 DEBUG django.db.backends utils 132449 137884488309632  (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
2025-04-04 16:51:26,141 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2025-04-04T14:51:26.140451+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 140451, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,142 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,142 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,143 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
2025-04-04 16:51:26,144 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
2025-04-04 16:51:26,145 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
2025-04-04 16:51:26,146 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
2025-04-04 16:51:26,147 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2025-04-04T14:51:26.146335+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2025, 4, 4, 14, 51, 26, 146335, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,148 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,148 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,149 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
2025-04-04 16:51:26,152 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
2025-04-04 16:51:26,155 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
2025-04-04 16:51:26,159 DEBUG django.db.backends utils 132449 137884488309632  (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
2025-04-04 16:51:26,160 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,161 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,165 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
2025-04-04 16:51:26,167 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
2025-04-04 16:51:26,167 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,168 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,168 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
2025-04-04 16:51:26,169 DEBUG django.db.backends utils 132449 137884488309632  (0.001) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
2025-04-04 16:51:26,169 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,171 DEBUG django.db.backends utils 132449 137884488309632  (0.001) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,171 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
2025-04-04 16:51:26,172 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
2025-04-04 16:51:26,172 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,173 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,173 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,174 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,174 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
2025-04-04 16:51:26,175 DEBUG django.db.backends utils 132449 137884488309632  (0.001) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
2025-04-04 16:51:26,175 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
2025-04-04 16:51:26,176 DEBUG django.db.backends utils 132449 137884488309632  (0.001) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
2025-04-04 16:51:26,177 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,178 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2025-04-04T14:51:26.177608+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 177608, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,178 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,181 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
2025-04-04 16:51:26,181 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
2025-04-04 16:51:26,182 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2025-04-04T14:51:26.181789+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2025, 4, 4, 14, 51, 26, 181789, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,182 DEBUG django.db.backends utils 132449 137884488309632  (0.000) COMMIT; args=None; alias=default
2025-04-04 16:51:26,182 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,186 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2025-04-04T14:51:26.185723+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2025, 4, 4, 14, 51, 26, 185723, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,187 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,187 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,191 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2025-04-04T14:51:26.190603+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2025, 4, 4, 14, 51, 26, 190603, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,192 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,192 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,196 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2025-04-04T14:51:26.195850+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2025, 4, 4, 14, 51, 26, 195850, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,197 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,197 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,198 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2025-04-04T14:51:26.197557+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2025, 4, 4, 14, 51, 26, 197557, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,198 DEBUG django.db.backends utils 132449 137884488309632  (0.000) COMMIT; args=None; alias=default
2025-04-04 16:51:26,198 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,202 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2025-04-04T14:51:26.202060+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2025, 4, 4, 14, 51, 26, 202060, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,203 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,204 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,212 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2025-04-04T14:51:26.210843+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2025, 4, 4, 14, 51, 26, 210843, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,213 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,213 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,217 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2025-04-04T14:51:26.217186+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2025, 4, 4, 14, 51, 26, 217186, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,219 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,219 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,223 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
2025-04-04 16:51:26,225 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
2025-04-04 16:51:26,225 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2025-04-04T14:51:26.225299+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2025, 4, 4, 14, 51, 26, 225299, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,227 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,227 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,232 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2025-04-04T14:51:26.231244+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2025, 4, 4, 14, 51, 26, 231244, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,233 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,233 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,237 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2025-04-04T14:51:26.237056+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2025, 4, 4, 14, 51, 26, 237056, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,238 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,238 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,244 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "accounts_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NULL, "is_superuser" boolean NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(255) NOT NULL, "last_name" varchar(255) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
2025-04-04 16:51:26,250 DEBUG django.db.backends utils 132449 137884488309632  (0.006) CREATE TABLE "accounts_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NULL, "is_superuser" boolean NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(255) NOT NULL, "last_name" varchar(255) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
2025-04-04 16:51:26,251 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "accounts_user_groups" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,254 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE TABLE "accounts_user_groups" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,254 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "accounts_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,257 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE TABLE "accounts_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,264 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE UNIQUE INDEX "filled_email_unique" ON "accounts_user" ("email") WHERE NOT ("email" = ''); (params None)
2025-04-04 16:51:26,267 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE UNIQUE INDEX "filled_email_unique" ON "accounts_user" ("email") WHERE NOT ("email" = ''); args=None; alias=default
2025-04-04 16:51:26,267 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "accounts_user_username_6088629e_like" ON "accounts_user" ("username" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,269 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "accounts_user_username_6088629e_like" ON "accounts_user" ("username" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,269 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "accounts_user_groups" ADD CONSTRAINT "accounts_user_groups_user_id_group_id_59c0b32f_uniq" UNIQUE ("user_id", "group_id"); (params None)
2025-04-04 16:51:26,271 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "accounts_user_groups" ADD CONSTRAINT "accounts_user_groups_user_id_group_id_59c0b32f_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
2025-04-04 16:51:26,271 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "accounts_user_groups" ADD CONSTRAINT "accounts_user_groups_user_id_52b62117_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,272 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "accounts_user_groups" ADD CONSTRAINT "accounts_user_groups_user_id_52b62117_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,272 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "accounts_user_groups" ADD CONSTRAINT "accounts_user_groups_group_id_bd11a704_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,273 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "accounts_user_groups" ADD CONSTRAINT "accounts_user_groups_group_id_bd11a704_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,273 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "accounts_user_groups_user_id_52b62117" ON "accounts_user_groups" ("user_id"); (params None)
2025-04-04 16:51:26,275 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "accounts_user_groups_user_id_52b62117" ON "accounts_user_groups" ("user_id"); args=None; alias=default
2025-04-04 16:51:26,275 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "accounts_user_groups_group_id_bd11a704" ON "accounts_user_groups" ("group_id"); (params None)
2025-04-04 16:51:26,277 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "accounts_user_groups_group_id_bd11a704" ON "accounts_user_groups" ("group_id"); args=None; alias=default
2025-04-04 16:51:26,277 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "accounts_user_user_permissions" ADD CONSTRAINT "accounts_user_user_permi_user_id_permission_id_2ab516c2_uniq" UNIQUE ("user_id", "permission_id"); (params None)
2025-04-04 16:51:26,279 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "accounts_user_user_permissions" ADD CONSTRAINT "accounts_user_user_permi_user_id_permission_id_2ab516c2_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
2025-04-04 16:51:26,279 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "accounts_user_user_permissions" ADD CONSTRAINT "accounts_user_user_p_user_id_e4f0a161_fk_accounts_" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,280 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "accounts_user_user_permissions" ADD CONSTRAINT "accounts_user_user_p_user_id_e4f0a161_fk_accounts_" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,281 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "accounts_user_user_permissions" ADD CONSTRAINT "accounts_user_user_p_permission_id_113bb443_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,282 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "accounts_user_user_permissions" ADD CONSTRAINT "accounts_user_user_p_permission_id_113bb443_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,282 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "accounts_user_user_permissions_user_id_e4f0a161" ON "accounts_user_user_permissions" ("user_id"); (params None)
2025-04-04 16:51:26,284 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "accounts_user_user_permissions_user_id_e4f0a161" ON "accounts_user_user_permissions" ("user_id"); args=None; alias=default
2025-04-04 16:51:26,284 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "accounts_user_user_permissions_permission_id_113bb443" ON "accounts_user_user_permissions" ("permission_id"); (params None)
2025-04-04 16:51:26,285 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "accounts_user_user_permissions_permission_id_113bb443" ON "accounts_user_user_permissions" ("permission_id"); args=None; alias=default
2025-04-04 16:51:26,287 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,289 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('accounts', '0001_initial', '2025-04-04T14:51:26.287750+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('accounts', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 287750, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,289 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,300 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,306 DEBUG django.db.backends utils 132449 137884488309632  (0.006) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,307 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,308 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,308 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,310 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,310 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
2025-04-04 16:51:26,312 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
2025-04-04 16:51:26,312 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
2025-04-04 16:51:26,315 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
2025-04-04 16:51:26,316 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,317 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2025-04-04T14:51:26.316609+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 316609, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,318 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,329 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2025-04-04T14:51:26.327883+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2025, 4, 4, 14, 51, 26, 327883, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,330 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,330 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,341 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2025-04-04T14:51:26.339965+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2025, 4, 4, 14, 51, 26, 339965, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,342 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,342 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,344 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "admin_index_appgroup" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "order" integer NOT NULL CHECK ("order" >= 0), "name" varchar(200) NOT NULL, "slug" varchar(50) NOT NULL UNIQUE); (params None)
2025-04-04 16:51:26,350 DEBUG django.db.backends utils 132449 137884488309632  (0.005) CREATE TABLE "admin_index_appgroup" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "order" integer NOT NULL CHECK ("order" >= 0), "name" varchar(200) NOT NULL, "slug" varchar(50) NOT NULL UNIQUE); args=None; alias=default
2025-04-04 16:51:26,354 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "admin_index_applink" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "order" integer NOT NULL CHECK ("order" >= 0), "name" varchar(200) NOT NULL, "link" varchar(200) NOT NULL, "app_group_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,357 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE TABLE "admin_index_applink" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "order" integer NOT NULL CHECK ("order" >= 0), "name" varchar(200) NOT NULL, "link" varchar(200) NOT NULL, "app_group_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,438 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "admin_index_appgroup_models" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "appgroup_id" integer NOT NULL, "contenttypeproxy_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,442 DEBUG django.db.backends utils 132449 137884488309632  (0.004) CREATE TABLE "admin_index_appgroup_models" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "appgroup_id" integer NOT NULL, "contenttypeproxy_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,443 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "admin_index_appgroup_order_4eeb6684" ON "admin_index_appgroup" ("order"); (params None)
2025-04-04 16:51:26,446 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE INDEX "admin_index_appgroup_order_4eeb6684" ON "admin_index_appgroup" ("order"); args=None; alias=default
2025-04-04 16:51:26,447 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "admin_index_appgroup_slug_1a396c23_like" ON "admin_index_appgroup" ("slug" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,449 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "admin_index_appgroup_slug_1a396c23_like" ON "admin_index_appgroup" ("slug" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,449 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ADD CONSTRAINT "admin_index_applink_app_group_id_d954f604_fk_admin_ind" FOREIGN KEY ("app_group_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,451 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "admin_index_applink" ADD CONSTRAINT "admin_index_applink_app_group_id_d954f604_fk_admin_ind" FOREIGN KEY ("app_group_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,451 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "admin_index_applink_order_36a54934" ON "admin_index_applink" ("order"); (params None)
2025-04-04 16:51:26,453 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "admin_index_applink_order_36a54934" ON "admin_index_applink" ("order"); args=None; alias=default
2025-04-04 16:51:26,454 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "admin_index_applink_app_group_id_d954f604" ON "admin_index_applink" ("app_group_id"); (params None)
2025-04-04 16:51:26,456 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "admin_index_applink_app_group_id_d954f604" ON "admin_index_applink" ("app_group_id"); args=None; alias=default
2025-04-04 16:51:26,456 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_mod_appgroup_id_contenttypep_71f704bb_uniq" UNIQUE ("appgroup_id", "contenttypeproxy_id"); (params None)
2025-04-04 16:51:26,458 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_mod_appgroup_id_contenttypep_71f704bb_uniq" UNIQUE ("appgroup_id", "contenttypeproxy_id"); args=None; alias=default
2025-04-04 16:51:26,458 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_appgroup_id_2bf4a4c3_fk_admin_ind" FOREIGN KEY ("appgroup_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,460 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_appgroup_id_2bf4a4c3_fk_admin_ind" FOREIGN KEY ("appgroup_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,460 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_contenttypeproxy_id_1e3df183_fk_django_co" FOREIGN KEY ("contenttypeproxy_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,461 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_contenttypeproxy_id_1e3df183_fk_django_co" FOREIGN KEY ("contenttypeproxy_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,462 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "admin_index_appgroup_models_appgroup_id_2bf4a4c3" ON "admin_index_appgroup_models" ("appgroup_id"); (params None)
2025-04-04 16:51:26,464 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "admin_index_appgroup_models_appgroup_id_2bf4a4c3" ON "admin_index_appgroup_models" ("appgroup_id"); args=None; alias=default
2025-04-04 16:51:26,464 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "admin_index_appgroup_models_contenttypeproxy_id_1e3df183" ON "admin_index_appgroup_models" ("contenttypeproxy_id"); (params None)
2025-04-04 16:51:26,466 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "admin_index_appgroup_models_contenttypeproxy_id_1e3df183" ON "admin_index_appgroup_models" ("contenttypeproxy_id"); args=None; alias=default
2025-04-04 16:51:26,468 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,469 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin_index', '0001_initial', '2025-04-04T14:51:26.468439+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin_index', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 468439, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,470 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,476 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ADD CONSTRAINT "admin_index_applink_app_group_id_link_827f6133_uniq" UNIQUE ("app_group_id", "link"); (params None)
2025-04-04 16:51:26,480 DEBUG django.db.backends utils 132449 137884488309632  (0.003) ALTER TABLE "admin_index_applink" ADD CONSTRAINT "admin_index_applink_app_group_id_link_827f6133_uniq" UNIQUE ("app_group_id", "link"); args=None; alias=default
2025-04-04 16:51:26,482 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin_index', '0002_auto_20170802_1754', '2025-04-04T14:51:26.481255+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin_index', '0002_auto_20170802_1754', datetime.datetime(2025, 4, 4, 14, 51, 26, 481255, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,483 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,484 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,497 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin_index', '0003_auto_20200724_1516', '2025-04-04T14:51:26.495792+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin_index', '0003_auto_20200724_1516', datetime.datetime(2025, 4, 4, 14, 51, 26, 495792, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,498 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,498 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,514 DEBUG django.db.backends utils 132449 137884488309632  (0.003) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'admin_index_appgroup_models' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['admin_index_appgroup_models']; alias=default
2025-04-04 16:51:26,519 DEBUG django.db.backends utils 132449 137884488309632  (0.004) 
            SELECT
                indexname,
                array_agg(attname ORDER BY arridx),
                indisunique,
                indisprimary,
                array_agg(ordering ORDER BY arridx),
                amname,
                exprdef,
                s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM
                        pg_index i,
                        unnest(i.indkey, i.indoption)
                            WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN
                    pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'admin_index_appgroup_models' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['btree', 'admin_index_appgroup_models']; alias=default
2025-04-04 16:51:26,519 DEBUG django.db.backends.schema schema 132449 137884488309632  SET CONSTRAINTS "admin_index_appgroup_appgroup_id_2bf4a4c3_fk_admin_ind" IMMEDIATE; ALTER TABLE "admin_index_appgroup_models" DROP CONSTRAINT "admin_index_appgroup_appgroup_id_2bf4a4c3_fk_admin_ind"; (params None)
2025-04-04 16:51:26,520 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SET CONSTRAINTS "admin_index_appgroup_appgroup_id_2bf4a4c3_fk_admin_ind" IMMEDIATE; ALTER TABLE "admin_index_appgroup_models" DROP CONSTRAINT "admin_index_appgroup_appgroup_id_2bf4a4c3_fk_admin_ind"; args=None; alias=default
2025-04-04 16:51:26,522 DEBUG django.db.backends utils 132449 137884488309632  (0.001) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'admin_index_applink' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['admin_index_applink']; alias=default
2025-04-04 16:51:26,525 DEBUG django.db.backends utils 132449 137884488309632  (0.003) 
            SELECT
                indexname,
                array_agg(attname ORDER BY arridx),
                indisunique,
                indisprimary,
                array_agg(ordering ORDER BY arridx),
                amname,
                exprdef,
                s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM
                        pg_index i,
                        unnest(i.indkey, i.indoption)
                            WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN
                    pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'admin_index_applink' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['btree', 'admin_index_applink']; alias=default
2025-04-04 16:51:26,525 DEBUG django.db.backends.schema schema 132449 137884488309632  SET CONSTRAINTS "admin_index_applink_app_group_id_d954f604_fk_admin_ind" IMMEDIATE; ALTER TABLE "admin_index_applink" DROP CONSTRAINT "admin_index_applink_app_group_id_d954f604_fk_admin_ind"; (params None)
2025-04-04 16:51:26,526 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SET CONSTRAINTS "admin_index_applink_app_group_id_d954f604_fk_admin_ind" IMMEDIATE; ALTER TABLE "admin_index_applink" DROP CONSTRAINT "admin_index_applink_app_group_id_d954f604_fk_admin_ind"; args=None; alias=default
2025-04-04 16:51:26,529 DEBUG django.db.backends utils 132449 137884488309632  (0.002) 
            SELECT
                s.relname AS sequence_name,
                a.attname AS colname
            FROM
                pg_class s
                JOIN pg_depend d ON d.objid = s.oid
                    AND d.classid = 'pg_class'::regclass
                    AND d.refclassid = 'pg_class'::regclass
                JOIN pg_attribute a ON d.refobjid = a.attrelid
                    AND d.refobjsubid = a.attnum
                JOIN pg_class tbl ON tbl.oid = d.refobjid
                    AND tbl.relname = 'admin_index_appgroup'
                    AND pg_catalog.pg_table_is_visible(tbl.oid)
            WHERE
                s.relkind = 'S';
        ; args=['admin_index_appgroup']; alias=default
2025-04-04 16:51:26,529 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup" ALTER COLUMN "id" TYPE bigint USING "id"::bigint; (params None)
2025-04-04 16:51:26,539 DEBUG django.db.backends utils 132449 137884488309632  (0.010) ALTER TABLE "admin_index_appgroup" ALTER COLUMN "id" TYPE bigint USING "id"::bigint; args=None; alias=default
2025-04-04 16:51:26,539 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER SEQUENCE IF EXISTS "admin_index_appgroup_id_seq" AS bigint; (params None)
2025-04-04 16:51:26,540 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER SEQUENCE IF EXISTS "admin_index_appgroup_id_seq" AS bigint; args=None; alias=default
2025-04-04 16:51:26,541 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup_models" ALTER COLUMN "appgroup_id" TYPE bigint USING "appgroup_id"::bigint; (params None)
2025-04-04 16:51:26,549 DEBUG django.db.backends utils 132449 137884488309632  (0.008) ALTER TABLE "admin_index_appgroup_models" ALTER COLUMN "appgroup_id" TYPE bigint USING "appgroup_id"::bigint; args=None; alias=default
2025-04-04 16:51:26,550 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ALTER COLUMN "app_group_id" TYPE bigint USING "app_group_id"::bigint; (params None)
2025-04-04 16:51:26,557 DEBUG django.db.backends utils 132449 137884488309632  (0.007) ALTER TABLE "admin_index_applink" ALTER COLUMN "app_group_id" TYPE bigint USING "app_group_id"::bigint; args=None; alias=default
2025-04-04 16:51:26,557 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_models_appgroup_id_2bf4a4c3_fk" FOREIGN KEY ("appgroup_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,559 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "admin_index_appgroup_models" ADD CONSTRAINT "admin_index_appgroup_models_appgroup_id_2bf4a4c3_fk" FOREIGN KEY ("appgroup_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,559 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ADD CONSTRAINT "admin_index_applink_app_group_id_d954f604_fk" FOREIGN KEY ("app_group_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,561 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "admin_index_applink" ADD CONSTRAINT "admin_index_applink_app_group_id_d954f604_fk" FOREIGN KEY ("app_group_id") REFERENCES "admin_index_appgroup" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,568 DEBUG django.db.backends utils 132449 137884488309632  (0.002) 
            SELECT
                s.relname AS sequence_name,
                a.attname AS colname
            FROM
                pg_class s
                JOIN pg_depend d ON d.objid = s.oid
                    AND d.classid = 'pg_class'::regclass
                    AND d.refclassid = 'pg_class'::regclass
                JOIN pg_attribute a ON d.refobjid = a.attrelid
                    AND d.refobjsubid = a.attnum
                JOIN pg_class tbl ON tbl.oid = d.refobjid
                    AND tbl.relname = 'admin_index_applink'
                    AND pg_catalog.pg_table_is_visible(tbl.oid)
            WHERE
                s.relkind = 'S';
        ; args=['admin_index_applink']; alias=default
2025-04-04 16:51:26,569 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ALTER COLUMN "id" TYPE bigint USING "id"::bigint; (params None)
2025-04-04 16:51:26,578 DEBUG django.db.backends utils 132449 137884488309632  (0.009) ALTER TABLE "admin_index_applink" ALTER COLUMN "id" TYPE bigint USING "id"::bigint; args=None; alias=default
2025-04-04 16:51:26,578 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER SEQUENCE IF EXISTS "admin_index_applink_id_seq" AS bigint; (params None)
2025-04-04 16:51:26,579 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER SEQUENCE IF EXISTS "admin_index_applink_id_seq" AS bigint; args=None; alias=default
2025-04-04 16:51:26,580 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin_index', '0004_auto_20230503_0723', '2025-04-04T14:51:26.579542+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin_index', '0004_auto_20230503_0723', datetime.datetime(2025, 4, 4, 14, 51, 26, 579542, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,585 DEBUG django.db.backends utils 132449 137884488309632  (0.005) COMMIT; args=None; alias=default
2025-04-04 16:51:26,585 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,593 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup" ADD COLUMN "translations" jsonb DEFAULT '{}'::jsonb NOT NULL; (params None)
2025-04-04 16:51:26,599 DEBUG django.db.backends utils 132449 137884488309632  (0.005) ALTER TABLE "admin_index_appgroup" ADD COLUMN "translations" jsonb DEFAULT '{}'::jsonb NOT NULL; args=None; alias=default
2025-04-04 16:51:26,599 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_appgroup" ALTER COLUMN "translations" DROP DEFAULT; (params None)
2025-04-04 16:51:26,600 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "admin_index_appgroup" ALTER COLUMN "translations" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:26,604 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ADD COLUMN "translations" jsonb DEFAULT '{}'::jsonb NOT NULL; (params None)
2025-04-04 16:51:26,609 DEBUG django.db.backends utils 132449 137884488309632  (0.004) ALTER TABLE "admin_index_applink" ADD COLUMN "translations" jsonb DEFAULT '{}'::jsonb NOT NULL; args=None; alias=default
2025-04-04 16:51:26,609 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "admin_index_applink" ALTER COLUMN "translations" DROP DEFAULT; (params None)
2025-04-04 16:51:26,610 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "admin_index_applink" ALTER COLUMN "translations" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:26,612 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin_index', '0005_auto_20230503_1910', '2025-04-04T14:51:26.611038+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin_index', '0005_auto_20230503_1910', datetime.datetime(2025, 4, 4, 14, 51, 26, 611038, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,613 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,613 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,629 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "admin_index_appgroup"."id", "admin_index_appgroup"."order", "admin_index_appgroup"."name", "admin_index_appgroup"."slug", "admin_index_appgroup"."translations" FROM "admin_index_appgroup" ORDER BY "admin_index_appgroup"."order" ASC; args=(); alias=default
2025-04-04 16:51:26,631 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "admin_index_applink"."id", "admin_index_applink"."order", "admin_index_applink"."name", "admin_index_applink"."link", "admin_index_applink"."app_group_id", "admin_index_applink"."translations" FROM "admin_index_applink" ORDER BY "admin_index_applink"."order" ASC; args=(); alias=default
2025-04-04 16:51:26,633 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin_index', '0006_auto_20230503_1910', '2025-04-04T14:51:26.632264+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin_index', '0006_auto_20230503_1910', datetime.datetime(2025, 4, 4, 14, 51, 26, 632264, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,634 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,635 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,638 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "axes_accessattempt" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_agent" varchar(255) NOT NULL, "ip_address" inet NULL, "username" varchar(255) NULL, "trusted" boolean NOT NULL, "http_accept" varchar(1025) NOT NULL, "path_info" varchar(255) NOT NULL, "attempt_time" timestamp with time zone NOT NULL, "get_data" text NOT NULL, "post_data" text NOT NULL, "failures_since_start" integer NOT NULL CHECK ("failures_since_start" >= 0)); (params None)
2025-04-04 16:51:26,647 DEBUG django.db.backends utils 132449 137884488309632  (0.008) CREATE TABLE "axes_accessattempt" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_agent" varchar(255) NOT NULL, "ip_address" inet NULL, "username" varchar(255) NULL, "trusted" boolean NOT NULL, "http_accept" varchar(1025) NOT NULL, "path_info" varchar(255) NOT NULL, "attempt_time" timestamp with time zone NOT NULL, "get_data" text NOT NULL, "post_data" text NOT NULL, "failures_since_start" integer NOT NULL CHECK ("failures_since_start" >= 0)); args=None; alias=default
2025-04-04 16:51:26,650 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "axes_accesslog" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_agent" varchar(255) NOT NULL, "ip_address" inet NULL, "username" varchar(255) NULL, "trusted" boolean NOT NULL, "http_accept" varchar(1025) NOT NULL, "path_info" varchar(255) NOT NULL, "attempt_time" timestamp with time zone NOT NULL, "logout_time" timestamp with time zone NULL); (params None)
2025-04-04 16:51:26,655 DEBUG django.db.backends utils 132449 137884488309632  (0.005) CREATE TABLE "axes_accesslog" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_agent" varchar(255) NOT NULL, "ip_address" inet NULL, "username" varchar(255) NULL, "trusted" boolean NOT NULL, "http_accept" varchar(1025) NOT NULL, "path_info" varchar(255) NOT NULL, "attempt_time" timestamp with time zone NOT NULL, "logout_time" timestamp with time zone NULL); args=None; alias=default
2025-04-04 16:51:26,656 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0001_initial', '2025-04-04T14:51:26.655992+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 655992, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,658 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,658 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,661 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessattempt_ip_address_10922d9c" ON "axes_accessattempt" ("ip_address"); (params None)
2025-04-04 16:51:26,664 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessattempt_ip_address_10922d9c" ON "axes_accessattempt" ("ip_address"); args=None; alias=default
2025-04-04 16:51:26,666 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessattempt_trusted_0eddf52e" ON "axes_accessattempt" ("trusted"); (params None)
2025-04-04 16:51:26,668 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessattempt_trusted_0eddf52e" ON "axes_accessattempt" ("trusted"); args=None; alias=default
2025-04-04 16:51:26,671 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessattempt_user_agent_ad89678b" ON "axes_accessattempt" ("user_agent"); (params None)
2025-04-04 16:51:26,673 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessattempt_user_agent_ad89678b" ON "axes_accessattempt" ("user_agent"); args=None; alias=default
2025-04-04 16:51:26,674 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessattempt_user_agent_ad89678b_like" ON "axes_accessattempt" ("user_agent" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,676 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessattempt_user_agent_ad89678b_like" ON "axes_accessattempt" ("user_agent" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,679 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessattempt_username_3f2d4ca0" ON "axes_accessattempt" ("username"); (params None)
2025-04-04 16:51:26,682 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessattempt_username_3f2d4ca0" ON "axes_accessattempt" ("username"); args=None; alias=default
2025-04-04 16:51:26,682 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessattempt_username_3f2d4ca0_like" ON "axes_accessattempt" ("username" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,684 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessattempt_username_3f2d4ca0_like" ON "axes_accessattempt" ("username" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,686 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accesslog_ip_address_86b417e5" ON "axes_accesslog" ("ip_address"); (params None)
2025-04-04 16:51:26,688 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accesslog_ip_address_86b417e5" ON "axes_accesslog" ("ip_address"); args=None; alias=default
2025-04-04 16:51:26,691 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accesslog_trusted_496c5681" ON "axes_accesslog" ("trusted"); (params None)
2025-04-04 16:51:26,693 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accesslog_trusted_496c5681" ON "axes_accesslog" ("trusted"); args=None; alias=default
2025-04-04 16:51:26,695 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accesslog_user_agent_0e659004" ON "axes_accesslog" ("user_agent"); (params None)
2025-04-04 16:51:26,697 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accesslog_user_agent_0e659004" ON "axes_accesslog" ("user_agent"); args=None; alias=default
2025-04-04 16:51:26,698 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accesslog_user_agent_0e659004_like" ON "axes_accesslog" ("user_agent" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,700 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accesslog_user_agent_0e659004_like" ON "axes_accesslog" ("user_agent" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,702 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accesslog_username_df93064b" ON "axes_accesslog" ("username"); (params None)
2025-04-04 16:51:26,704 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accesslog_username_df93064b" ON "axes_accesslog" ("username"); args=None; alias=default
2025-04-04 16:51:26,705 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accesslog_username_df93064b_like" ON "axes_accesslog" ("username" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,707 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accesslog_username_df93064b_like" ON "axes_accesslog" ("username" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,708 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0002_auto_20151217_2044', '2025-04-04T14:51:26.707367+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0002_auto_20151217_2044', datetime.datetime(2025, 4, 4, 14, 51, 26, 707367, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,709 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,709 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,731 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0003_auto_20160322_0929', '2025-04-04T14:51:26.730195+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0003_auto_20160322_0929', datetime.datetime(2025, 4, 4, 14, 51, 26, 730195, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,733 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,733 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,752 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0004_auto_20181024_1538', '2025-04-04T14:51:26.751601+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0004_auto_20181024_1538', datetime.datetime(2025, 4, 4, 14, 51, 26, 751601, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,754 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,754 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,756 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "axes_accessattempt" DROP COLUMN "trusted" CASCADE; (params None)
2025-04-04 16:51:26,758 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "axes_accessattempt" DROP COLUMN "trusted" CASCADE; args=None; alias=default
2025-04-04 16:51:26,759 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0005_remove_accessattempt_trusted', '2025-04-04T14:51:26.758287+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0005_remove_accessattempt_trusted', datetime.datetime(2025, 4, 4, 14, 51, 26, 758287, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,760 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,760 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,762 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "axes_accesslog" DROP COLUMN "trusted" CASCADE; (params None)
2025-04-04 16:51:26,764 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "axes_accesslog" DROP COLUMN "trusted" CASCADE; args=None; alias=default
2025-04-04 16:51:26,765 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0006_remove_accesslog_trusted', '2025-04-04T14:51:26.764327+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0006_remove_accesslog_trusted', datetime.datetime(2025, 4, 4, 14, 51, 26, 764327, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,766 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,766 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,785 DEBUG django.db.backends utils 132449 137884488309632  (0.002) SELECT "axes_accessattempt"."username" AS "username", "axes_accessattempt"."user_agent" AS "user_agent", "axes_accessattempt"."ip_address" AS "ip_address", COUNT("axes_accessattempt"."id") AS "id__count" FROM "axes_accessattempt" GROUP BY 1, 2, 3 HAVING COUNT("axes_accessattempt"."id") > 1; args=(1,); alias=default
2025-04-04 16:51:26,788 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "axes_accessattempt" ADD CONSTRAINT "axes_accessattempt_username_ip_address_user_agent_8ea22282_uniq" UNIQUE ("username", "ip_address", "user_agent"); (params None)
2025-04-04 16:51:26,791 DEBUG django.db.backends utils 132449 137884488309632  (0.003) ALTER TABLE "axes_accessattempt" ADD CONSTRAINT "axes_accessattempt_username_ip_address_user_agent_8ea22282_uniq" UNIQUE ("username", "ip_address", "user_agent"); args=None; alias=default
2025-04-04 16:51:26,792 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0007_alter_accessattempt_unique_together', '2025-04-04T14:51:26.792024+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0007_alter_accessattempt_unique_together', datetime.datetime(2025, 4, 4, 14, 51, 26, 792024, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,794 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,794 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,796 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "axes_accessfailurelog" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_agent" varchar(255) NOT NULL, "ip_address" inet NULL, "username" varchar(255) NULL, "http_accept" varchar(1025) NOT NULL, "path_info" varchar(255) NOT NULL, "attempt_time" timestamp with time zone NOT NULL, "locked_out" boolean NOT NULL); (params None)
2025-04-04 16:51:26,804 DEBUG django.db.backends utils 132449 137884488309632  (0.007) CREATE TABLE "axes_accessfailurelog" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_agent" varchar(255) NOT NULL, "ip_address" inet NULL, "username" varchar(255) NULL, "http_accept" varchar(1025) NOT NULL, "path_info" varchar(255) NOT NULL, "attempt_time" timestamp with time zone NOT NULL, "locked_out" boolean NOT NULL); args=None; alias=default
2025-04-04 16:51:26,805 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessfailurelog_user_agent_ea145dda" ON "axes_accessfailurelog" ("user_agent"); (params None)
2025-04-04 16:51:26,807 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessfailurelog_user_agent_ea145dda" ON "axes_accessfailurelog" ("user_agent"); args=None; alias=default
2025-04-04 16:51:26,807 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessfailurelog_user_agent_ea145dda_like" ON "axes_accessfailurelog" ("user_agent" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,809 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessfailurelog_user_agent_ea145dda_like" ON "axes_accessfailurelog" ("user_agent" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,810 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessfailurelog_ip_address_2e9f5a7f" ON "axes_accessfailurelog" ("ip_address"); (params None)
2025-04-04 16:51:26,812 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessfailurelog_ip_address_2e9f5a7f" ON "axes_accessfailurelog" ("ip_address"); args=None; alias=default
2025-04-04 16:51:26,812 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessfailurelog_username_a8b7e8a4" ON "axes_accessfailurelog" ("username"); (params None)
2025-04-04 16:51:26,814 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessfailurelog_username_a8b7e8a4" ON "axes_accessfailurelog" ("username"); args=None; alias=default
2025-04-04 16:51:26,814 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "axes_accessfailurelog_username_a8b7e8a4_like" ON "axes_accessfailurelog" ("username" varchar_pattern_ops); (params None)
2025-04-04 16:51:26,816 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "axes_accessfailurelog_username_a8b7e8a4_like" ON "axes_accessfailurelog" ("username" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:26,817 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,819 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0008_accessfailurelog', '2025-04-04T14:51:26.818186+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0008_accessfailurelog', datetime.datetime(2025, 4, 4, 14, 51, 26, 818186, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,820 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,822 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "axes_accesslog" ADD COLUMN "session_hash" varchar(64) DEFAULT '' NOT NULL; (params None)
2025-04-04 16:51:26,824 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "axes_accesslog" ADD COLUMN "session_hash" varchar(64) DEFAULT '' NOT NULL; args=None; alias=default
2025-04-04 16:51:26,824 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "axes_accesslog" ALTER COLUMN "session_hash" DROP DEFAULT; (params None)
2025-04-04 16:51:26,825 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "axes_accesslog" ALTER COLUMN "session_hash" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:26,826 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('axes', '0009_add_session_hash', '2025-04-04T14:51:26.825557+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('axes', '0009_add_session_hash', datetime.datetime(2025, 4, 4, 14, 51, 26, 825557, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,827 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,827 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,845 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "mozilla_django_oidc_db_openidconnectconfig" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "enabled" boolean NOT NULL, "oidc_rp_client_id" varchar(1000) NOT NULL, "oidc_rp_client_secret" varchar(1000) NOT NULL, "oidc_rp_sign_algo" varchar(50) NOT NULL, "oidc_rp_scopes_list" varchar(50)[] NOT NULL, "oidc_op_jwks_endpoint" varchar(1000) NOT NULL, "oidc_op_authorization_endpoint" varchar(1000) NOT NULL, "oidc_op_token_endpoint" varchar(1000) NOT NULL, "oidc_op_user_endpoint" varchar(1000) NOT NULL, "oidc_rp_idp_sign_key" varchar(1000) NOT NULL, "oidc_op_discovery_endpoint" varchar(1000) NOT NULL, "claim_mapping" jsonb NOT NULL, "groups_claim" varchar(50) NOT NULL, "make_users_staff" boolean NOT NULL, "sync_groups" boolean NOT NULL, "sync_groups_glob_pattern" varchar(255) NOT NULL, "username_claim" varchar(50) NOT NULL, "oidc_exempt_urls" varchar(1000)[] NOT NULL, "oidc_nonce_size" integer NOT NULL CHECK ("oidc_nonce_size" >= 0), "oidc_state_size" integer NOT NULL CHECK ("oidc_state_size" >= 0), "oidc_use_nonce" boolean NOT NULL, "userinfo_claims_source" varchar(100) NOT NULL, "superuser_group_names" varchar(50)[] NOT NULL, "oidc_token_use_basic_auth" boolean NOT NULL); (params None)
2025-04-04 16:51:26,852 DEBUG django.db.backends utils 132449 137884488309632  (0.007) CREATE TABLE "mozilla_django_oidc_db_openidconnectconfig" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "enabled" boolean NOT NULL, "oidc_rp_client_id" varchar(1000) NOT NULL, "oidc_rp_client_secret" varchar(1000) NOT NULL, "oidc_rp_sign_algo" varchar(50) NOT NULL, "oidc_rp_scopes_list" varchar(50)[] NOT NULL, "oidc_op_jwks_endpoint" varchar(1000) NOT NULL, "oidc_op_authorization_endpoint" varchar(1000) NOT NULL, "oidc_op_token_endpoint" varchar(1000) NOT NULL, "oidc_op_user_endpoint" varchar(1000) NOT NULL, "oidc_rp_idp_sign_key" varchar(1000) NOT NULL, "oidc_op_discovery_endpoint" varchar(1000) NOT NULL, "claim_mapping" jsonb NOT NULL, "groups_claim" varchar(50) NOT NULL, "make_users_staff" boolean NOT NULL, "sync_groups" boolean NOT NULL, "sync_groups_glob_pattern" varchar(255) NOT NULL, "username_claim" varchar(50) NOT NULL, "oidc_exempt_urls" varchar(1000)[] NOT NULL, "oidc_nonce_size" integer NOT NULL CHECK ("oidc_nonce_size" >= 0), "oidc_state_size" integer NOT NULL CHECK ("oidc_state_size" >= 0), "oidc_use_nonce" boolean NOT NULL, "userinfo_claims_source" varchar(100) NOT NULL, "superuser_group_names" varchar(50)[] NOT NULL, "oidc_token_use_basic_auth" boolean NOT NULL); args=None; alias=default
2025-04-04 16:51:26,853 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "openidconnectconfig_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
2025-04-04 16:51:26,857 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "openidconnectconfig_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:26,857 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ADD CONSTRAINT "mozilla_django_oidc_db_o_openidconnectconfig_id_g_6224822c_uniq" UNIQUE ("openidconnectconfig_id", "group_id"); (params None)
2025-04-04 16:51:26,859 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ADD CONSTRAINT "mozilla_django_oidc_db_o_openidconnectconfig_id_g_6224822c_uniq" UNIQUE ("openidconnectconfig_id", "group_id"); args=None; alias=default
2025-04-04 16:51:26,859 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ADD CONSTRAINT "mozilla_django_oidc__openidconnectconfig__da384d07_fk_mozilla_d" FOREIGN KEY ("openidconnectconfig_id") REFERENCES "mozilla_django_oidc_db_openidconnectconfig" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,861 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ADD CONSTRAINT "mozilla_django_oidc__openidconnectconfig__da384d07_fk_mozilla_d" FOREIGN KEY ("openidconnectconfig_id") REFERENCES "mozilla_django_oidc_db_openidconnectconfig" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,861 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ADD CONSTRAINT "mozilla_django_oidc__group_id_4f1c2f8f_fk_auth_grou" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:26,863 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig_default_groups" ADD CONSTRAINT "mozilla_django_oidc__group_id_4f1c2f8f_fk_auth_grou" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:26,863 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "mozilla_django_oidc_db_ope_openidconnectconfig_id_da384d07" ON "mozilla_django_oidc_db_openidconnectconfig_default_groups" ("openidconnectconfig_id"); (params None)
2025-04-04 16:51:26,865 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "mozilla_django_oidc_db_ope_openidconnectconfig_id_da384d07" ON "mozilla_django_oidc_db_openidconnectconfig_default_groups" ("openidconnectconfig_id"); args=None; alias=default
2025-04-04 16:51:26,865 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "mozilla_django_oidc_db_ope_group_id_4f1c2f8f" ON "mozilla_django_oidc_db_openidconnectconfig_default_groups" ("group_id"); (params None)
2025-04-04 16:51:26,867 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "mozilla_django_oidc_db_ope_group_id_4f1c2f8f" ON "mozilla_django_oidc_db_openidconnectconfig_default_groups" ("group_id"); args=None; alias=default
2025-04-04 16:51:26,868 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,870 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0001_initial', '2025-04-04T14:51:26.869327+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 26, 869327, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,872 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0002_openidconnectconfig_oidc_op_discovery_endpoint', '2025-04-04T14:51:26.871119+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0002_openidconnectconfig_oidc_op_discovery_endpoint', datetime.datetime(2025, 4, 4, 14, 51, 26, 871119, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,873 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0003_auto_20210719_0803', '2025-04-04T14:51:26.872649+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0003_auto_20210719_0803', datetime.datetime(2025, 4, 4, 14, 51, 26, 872649, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,875 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0004_auto_20210812_1044', '2025-04-04T14:51:26.874204+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0004_auto_20210812_1044', datetime.datetime(2025, 4, 4, 14, 51, 26, 874204, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,877 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0005_openidconnectconfig_sync_groups_glob_pattern', '2025-04-04T14:51:26.875726+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0005_openidconnectconfig_sync_groups_glob_pattern', datetime.datetime(2025, 4, 4, 14, 51, 26, 875726, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,878 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0006_openidconnectconfig_unique_id_claim', '2025-04-04T14:51:26.877342+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0006_openidconnectconfig_unique_id_claim', datetime.datetime(2025, 4, 4, 14, 51, 26, 877342, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,880 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0007_auto_20220307_1128', '2025-04-04T14:51:26.878819+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0007_auto_20220307_1128', datetime.datetime(2025, 4, 4, 14, 51, 26, 878819, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,881 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0008_auto_20220422_0849', '2025-04-04T14:51:26.880346+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0008_auto_20220422_0849', datetime.datetime(2025, 4, 4, 14, 51, 26, 880346, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,883 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0009_openidconnectconfig_default_groups', '2025-04-04T14:51:26.881898+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0009_openidconnectconfig_default_groups', datetime.datetime(2025, 4, 4, 14, 51, 26, 881898, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,884 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0010_openidconnectconfig_userinfo_claims_source', '2025-04-04T14:51:26.883365+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0010_openidconnectconfig_userinfo_claims_source', datetime.datetime(2025, 4, 4, 14, 51, 26, 883365, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,886 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0011_alter_openidconnectconfig_userinfo_claims_source', '2025-04-04T14:51:26.884915+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0011_alter_openidconnectconfig_userinfo_claims_source', datetime.datetime(2025, 4, 4, 14, 51, 26, 884915, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,887 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0012_openidconnectconfig_superuser_group_names', '2025-04-04T14:51:26.886383+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0012_openidconnectconfig_superuser_group_names', datetime.datetime(2025, 4, 4, 14, 51, 26, 886383, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,888 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0012_alter_openidconnectconfig_sync_groups', '2025-04-04T14:51:26.887742+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0012_alter_openidconnectconfig_sync_groups', datetime.datetime(2025, 4, 4, 14, 51, 26, 887742, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,890 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0013_merge_20231221_1529', '2025-04-04T14:51:26.889153+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0013_merge_20231221_1529', datetime.datetime(2025, 4, 4, 14, 51, 26, 889153, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,891 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0014_alter_openidconnectconfig_groups_claim', '2025-04-04T14:51:26.890399+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0014_alter_openidconnectconfig_groups_claim', datetime.datetime(2025, 4, 4, 14, 51, 26, 890399, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,892 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0015_openidconnectconfig_oidc_token_use_basic_auth', '2025-04-04T14:51:26.891654+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0015_openidconnectconfig_oidc_token_use_basic_auth', datetime.datetime(2025, 4, 4, 14, 51, 26, 891654, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,893 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:26,906 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "new_groups_claim" varchar(50)[] DEFAULT ARRAY['roles'] NOT NULL; (params None)
2025-04-04 16:51:26,907 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "new_groups_claim" varchar(50)[] DEFAULT ARRAY['roles'] NOT NULL; args=None; alias=default
2025-04-04 16:51:26,908 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "new_groups_claim" DROP DEFAULT; (params None)
2025-04-04 16:51:26,908 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "new_groups_claim" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:26,922 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "new_username_claim" varchar(50)[] DEFAULT ARRAY['sub'] NOT NULL; (params None)
2025-04-04 16:51:26,922 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "new_username_claim" varchar(50)[] DEFAULT ARRAY['sub'] NOT NULL; args=None; alias=default
2025-04-04 16:51:26,923 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "new_username_claim" DROP DEFAULT; (params None)
2025-04-04 16:51:26,923 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "new_username_claim" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:26,945 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "mozilla_django_oidc_db_openidconnectconfig"."id", "mozilla_django_oidc_db_openidconnectconfig"."enabled", "mozilla_django_oidc_db_openidconnectconfig"."oidc_rp_client_id", "mozilla_django_oidc_db_openidconnectconfig"."oidc_rp_client_secret", "mozilla_django_oidc_db_openidconnectconfig"."oidc_rp_sign_algo", "mozilla_django_oidc_db_openidconnectconfig"."oidc_rp_scopes_list", "mozilla_django_oidc_db_openidconnectconfig"."oidc_op_jwks_endpoint", "mozilla_django_oidc_db_openidconnectconfig"."oidc_op_authorization_endpoint", "mozilla_django_oidc_db_openidconnectconfig"."oidc_op_token_endpoint", "mozilla_django_oidc_db_openidconnectconfig"."oidc_op_user_endpoint", "mozilla_django_oidc_db_openidconnectconfig"."oidc_rp_idp_sign_key", "mozilla_django_oidc_db_openidconnectconfig"."oidc_op_discovery_endpoint", "mozilla_django_oidc_db_openidconnectconfig"."claim_mapping", "mozilla_django_oidc_db_openidconnectconfig"."groups_claim", "mozilla_django_oidc_db_openidconnectconfig"."make_users_staff", "mozilla_django_oidc_db_openidconnectconfig"."sync_groups", "mozilla_django_oidc_db_openidconnectconfig"."sync_groups_glob_pattern", "mozilla_django_oidc_db_openidconnectconfig"."username_claim", "mozilla_django_oidc_db_openidconnectconfig"."oidc_exempt_urls", "mozilla_django_oidc_db_openidconnectconfig"."oidc_nonce_size", "mozilla_django_oidc_db_openidconnectconfig"."oidc_state_size", "mozilla_django_oidc_db_openidconnectconfig"."oidc_use_nonce", "mozilla_django_oidc_db_openidconnectconfig"."userinfo_claims_source", "mozilla_django_oidc_db_openidconnectconfig"."superuser_group_names", "mozilla_django_oidc_db_openidconnectconfig"."oidc_token_use_basic_auth", "mozilla_django_oidc_db_openidconnectconfig"."new_groups_claim", "mozilla_django_oidc_db_openidconnectconfig"."new_username_claim" FROM "mozilla_django_oidc_db_openidconnectconfig" ORDER BY "mozilla_django_oidc_db_openidconnectconfig"."id" ASC LIMIT 1; args=(); alias=default
2025-04-04 16:51:26,956 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" DROP COLUMN "groups_claim" CASCADE; (params None)
2025-04-04 16:51:26,956 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" DROP COLUMN "groups_claim" CASCADE; args=None; alias=default
2025-04-04 16:51:26,967 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" DROP COLUMN "username_claim" CASCADE; (params None)
2025-04-04 16:51:26,968 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" DROP COLUMN "username_claim" CASCADE; args=None; alias=default
2025-04-04 16:51:26,979 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" RENAME COLUMN "new_groups_claim" TO "groups_claim"; (params None)
2025-04-04 16:51:26,979 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" RENAME COLUMN "new_groups_claim" TO "groups_claim"; args=None; alias=default
2025-04-04 16:51:26,990 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" RENAME COLUMN "new_username_claim" TO "username_claim"; (params None)
2025-04-04 16:51:26,991 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" RENAME COLUMN "new_username_claim" TO "username_claim"; args=None; alias=default
2025-04-04 16:51:26,992 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0002_migrate_to_claim_field', '2025-04-04T14:51:26.991764+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0002_migrate_to_claim_field', datetime.datetime(2025, 4, 4, 14, 51, 26, 991764, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:26,994 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:26,994 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,011 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "oidc_keycloak_idp_hint" varchar(1000) DEFAULT '' NOT NULL; (params None)
2025-04-04 16:51:27,013 DEBUG django.db.backends utils 132449 137884488309632  (0.002) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "oidc_keycloak_idp_hint" varchar(1000) DEFAULT '' NOT NULL; args=None; alias=default
2025-04-04 16:51:27,013 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "oidc_keycloak_idp_hint" DROP DEFAULT; (params None)
2025-04-04 16:51:27,014 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "oidc_keycloak_idp_hint" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:27,025 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "oidc_op_logout_endpoint" varchar(1000) DEFAULT '' NOT NULL; (params None)
2025-04-04 16:51:27,026 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ADD COLUMN "oidc_op_logout_endpoint" varchar(1000) DEFAULT '' NOT NULL; args=None; alias=default
2025-04-04 16:51:27,026 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "oidc_op_logout_endpoint" DROP DEFAULT; (params None)
2025-04-04 16:51:27,027 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" ALTER COLUMN "oidc_op_logout_endpoint" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:27,028 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0003_openidconnectconfig_oidc_keycloak_idp_hint_and_more', '2025-04-04T14:51:27.027575+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0003_openidconnectconfig_oidc_keycloak_idp_hint_and_more', datetime.datetime(2025, 4, 4, 14, 51, 27, 27575, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,029 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,030 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,040 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" DROP COLUMN "oidc_exempt_urls" CASCADE; (params None)
2025-04-04 16:51:27,042 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "mozilla_django_oidc_db_openidconnectconfig" DROP COLUMN "oidc_exempt_urls" CASCADE; args=None; alias=default
2025-04-04 16:51:27,043 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0004_remove_openidconnectconfig_oidc_exempt_urls', '2025-04-04T14:51:27.042584+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0004_remove_openidconnectconfig_oidc_exempt_urls', datetime.datetime(2025, 4, 4, 14, 51, 27, 42584, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,044 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,045 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,057 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0005_alter_openidconnectconfig_claim_mapping', '2025-04-04T14:51:27.055855+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0005_alter_openidconnectconfig_claim_mapping', datetime.datetime(2025, 4, 4, 14, 51, 27, 55855, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,058 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,058 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,076 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "otp_static_staticdevice" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(64) NOT NULL, "confirmed" boolean NOT NULL, "user_id" integer NOT NULL); (params None)
2025-04-04 16:51:27,081 DEBUG django.db.backends utils 132449 137884488309632  (0.004) CREATE TABLE "otp_static_staticdevice" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(64) NOT NULL, "confirmed" boolean NOT NULL, "user_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:27,099 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "otp_static_statictoken" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "token" varchar(16) NOT NULL, "device_id" integer NOT NULL); (params None)
2025-04-04 16:51:27,103 DEBUG django.db.backends utils 132449 137884488309632  (0.003) CREATE TABLE "otp_static_statictoken" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "token" varchar(16) NOT NULL, "device_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:27,104 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ADD CONSTRAINT "otp_static_staticdevice_user_id_7f9cff2b_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:27,105 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_static_staticdevice" ADD CONSTRAINT "otp_static_staticdevice_user_id_7f9cff2b_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:27,105 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "otp_static_staticdevice_user_id_7f9cff2b" ON "otp_static_staticdevice" ("user_id"); (params None)
2025-04-04 16:51:27,108 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "otp_static_staticdevice_user_id_7f9cff2b" ON "otp_static_staticdevice" ("user_id"); args=None; alias=default
2025-04-04 16:51:27,108 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_statictoken" ADD CONSTRAINT "otp_static_statictok_device_id_74b7c7d1_fk_otp_stati" FOREIGN KEY ("device_id") REFERENCES "otp_static_staticdevice" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:27,109 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_static_statictoken" ADD CONSTRAINT "otp_static_statictok_device_id_74b7c7d1_fk_otp_stati" FOREIGN KEY ("device_id") REFERENCES "otp_static_staticdevice" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:27,109 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "otp_static_statictoken_token_d0a51866" ON "otp_static_statictoken" ("token"); (params None)
2025-04-04 16:51:27,112 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "otp_static_statictoken_token_d0a51866" ON "otp_static_statictoken" ("token"); args=None; alias=default
2025-04-04 16:51:27,112 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "otp_static_statictoken_token_d0a51866_like" ON "otp_static_statictoken" ("token" varchar_pattern_ops); (params None)
2025-04-04 16:51:27,114 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "otp_static_statictoken_token_d0a51866_like" ON "otp_static_statictoken" ("token" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:27,114 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "otp_static_statictoken_device_id_74b7c7d1" ON "otp_static_statictoken" ("device_id"); (params None)
2025-04-04 16:51:27,116 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "otp_static_statictoken_device_id_74b7c7d1" ON "otp_static_statictoken" ("device_id"); args=None; alias=default
2025-04-04 16:51:27,118 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,119 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('otp_static', '0001_initial', '2025-04-04T14:51:27.118514+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('otp_static', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 27, 118514, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,120 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,136 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ADD COLUMN "throttling_failure_count" integer DEFAULT 0 NOT NULL CHECK ("throttling_failure_count" >= 0); (params None)
2025-04-04 16:51:27,138 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_static_staticdevice" ADD COLUMN "throttling_failure_count" integer DEFAULT 0 NOT NULL CHECK ("throttling_failure_count" >= 0); args=None; alias=default
2025-04-04 16:51:27,138 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ALTER COLUMN "throttling_failure_count" DROP DEFAULT; (params None)
2025-04-04 16:51:27,139 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_static_staticdevice" ALTER COLUMN "throttling_failure_count" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:27,149 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ADD COLUMN "throttling_failure_timestamp" timestamp with time zone NULL; (params None)
2025-04-04 16:51:27,149 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "otp_static_staticdevice" ADD COLUMN "throttling_failure_timestamp" timestamp with time zone NULL; args=None; alias=default
2025-04-04 16:51:27,151 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('otp_static', '0002_throttling', '2025-04-04T14:51:27.150246+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('otp_static', '0002_throttling', datetime.datetime(2025, 4, 4, 14, 51, 27, 150246, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,152 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,152 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,163 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ADD COLUMN "created_at" timestamp with time zone DEFAULT '2025-04-04T14:51:27.163123+00:00'::timestamptz NULL; (params None)
2025-04-04 16:51:27,164 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_static_staticdevice" ADD COLUMN "created_at" timestamp with time zone DEFAULT '2025-04-04T14:51:27.163123+00:00'::timestamptz NULL; args=None; alias=default
2025-04-04 16:51:27,165 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ALTER COLUMN "created_at" DROP DEFAULT; (params None)
2025-04-04 16:51:27,165 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_static_staticdevice" ALTER COLUMN "created_at" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:27,177 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_static_staticdevice" ADD COLUMN "last_used_at" timestamp with time zone NULL; (params None)
2025-04-04 16:51:27,177 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "otp_static_staticdevice" ADD COLUMN "last_used_at" timestamp with time zone NULL; args=None; alias=default
2025-04-04 16:51:27,179 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('otp_static', '0003_add_timestamps', '2025-04-04T14:51:27.178227+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('otp_static', '0003_add_timestamps', datetime.datetime(2025, 4, 4, 14, 51, 27, 178227, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,180 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,180 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,201 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "otp_totp_totpdevice" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(64) NOT NULL, "confirmed" boolean NOT NULL, "key" varchar(80) NOT NULL, "step" smallint NOT NULL CHECK ("step" >= 0), "t0" bigint NOT NULL, "digits" smallint NOT NULL CHECK ("digits" >= 0), "tolerance" smallint NOT NULL CHECK ("tolerance" >= 0), "drift" smallint NOT NULL, "last_t" bigint NOT NULL, "user_id" integer NOT NULL); (params None)
2025-04-04 16:51:27,206 DEBUG django.db.backends utils 132449 137884488309632  (0.005) CREATE TABLE "otp_totp_totpdevice" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(64) NOT NULL, "confirmed" boolean NOT NULL, "key" varchar(80) NOT NULL, "step" smallint NOT NULL CHECK ("step" >= 0), "t0" bigint NOT NULL, "digits" smallint NOT NULL CHECK ("digits" >= 0), "tolerance" smallint NOT NULL CHECK ("tolerance" >= 0), "drift" smallint NOT NULL, "last_t" bigint NOT NULL, "user_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:27,206 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ADD CONSTRAINT "otp_totp_totpdevice_user_id_0fb18292_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:27,208 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_totp_totpdevice" ADD CONSTRAINT "otp_totp_totpdevice_user_id_0fb18292_fk_accounts_user_id" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:27,208 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "otp_totp_totpdevice_user_id_0fb18292" ON "otp_totp_totpdevice" ("user_id"); (params None)
2025-04-04 16:51:27,211 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "otp_totp_totpdevice_user_id_0fb18292" ON "otp_totp_totpdevice" ("user_id"); args=None; alias=default
2025-04-04 16:51:27,212 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,214 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('otp_totp', '0001_initial', '2025-04-04T14:51:27.212723+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('otp_totp', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 27, 212723, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,214 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,226 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "throttling_failure_count" integer DEFAULT 0 NOT NULL CHECK ("throttling_failure_count" >= 0); (params None)
2025-04-04 16:51:27,228 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "throttling_failure_count" integer DEFAULT 0 NOT NULL CHECK ("throttling_failure_count" >= 0); args=None; alias=default
2025-04-04 16:51:27,228 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ALTER COLUMN "throttling_failure_count" DROP DEFAULT; (params None)
2025-04-04 16:51:27,229 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_totp_totpdevice" ALTER COLUMN "throttling_failure_count" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:27,240 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "throttling_failure_timestamp" timestamp with time zone NULL; (params None)
2025-04-04 16:51:27,241 DEBUG django.db.backends utils 132449 137884488309632  (0.000) ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "throttling_failure_timestamp" timestamp with time zone NULL; args=None; alias=default
2025-04-04 16:51:27,242 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('otp_totp', '0002_auto_20190420_0723', '2025-04-04T14:51:27.241873+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('otp_totp', '0002_auto_20190420_0723', datetime.datetime(2025, 4, 4, 14, 51, 27, 241873, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,244 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,244 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,258 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "created_at" timestamp with time zone DEFAULT '2025-04-04T14:51:27.258403+00:00'::timestamptz NULL; (params None)
2025-04-04 16:51:27,260 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "created_at" timestamp with time zone DEFAULT '2025-04-04T14:51:27.258403+00:00'::timestamptz NULL; args=None; alias=default
2025-04-04 16:51:27,260 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ALTER COLUMN "created_at" DROP DEFAULT; (params None)
2025-04-04 16:51:27,261 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_totp_totpdevice" ALTER COLUMN "created_at" DROP DEFAULT; args=None; alias=default
2025-04-04 16:51:27,272 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "last_used_at" timestamp with time zone NULL; (params None)
2025-04-04 16:51:27,273 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "otp_totp_totpdevice" ADD COLUMN "last_used_at" timestamp with time zone NULL; args=None; alias=default
2025-04-04 16:51:27,274 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('otp_totp', '0003_add_timestamps', '2025-04-04T14:51:27.273766+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('otp_totp', '0003_add_timestamps', datetime.datetime(2025, 4, 4, 14, 51, 27, 273766, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,276 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,276 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,278 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
2025-04-04 16:51:27,284 DEBUG django.db.backends utils 132449 137884488309632  (0.006) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
2025-04-04 16:51:27,285 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
2025-04-04 16:51:27,287 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
2025-04-04 16:51:27,287 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
2025-04-04 16:51:27,290 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
2025-04-04 16:51:27,291 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,293 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2025-04-04T14:51:27.291761+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 27, 291761, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,293 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,294 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0001_initial', '2025-04-04T14:51:27.293931+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 27, 293931, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,296 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0002_auto_20150110_0810', '2025-04-04T14:51:27.295270+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0002_auto_20150110_0810', datetime.datetime(2025, 4, 4, 14, 51, 27, 295270, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,297 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0003_auto_20150817_1733', '2025-04-04T14:51:27.296352+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0003_auto_20150817_1733', datetime.datetime(2025, 4, 4, 14, 51, 27, 296352, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,298 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0004_auto_20160205_1827', '2025-04-04T14:51:27.297412+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0004_auto_20160205_1827', datetime.datetime(2025, 4, 4, 14, 51, 27, 297412, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,299 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0005_auto_20160224_0450', '2025-04-04T14:51:27.298480+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0005_auto_20160224_0450', datetime.datetime(2025, 4, 4, 14, 51, 27, 298480, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,300 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0006_phonedevice_key_default', '2025-04-04T14:51:27.299543+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0006_phonedevice_key_default', datetime.datetime(2025, 4, 4, 14, 51, 27, 299543, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,301 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0007_auto_20201201_1019', '2025-04-04T14:51:27.300621+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0007_auto_20201201_1019', datetime.datetime(2025, 4, 4, 14, 51, 27, 300621, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,302 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0008_delete_phonedevice', '2025-04-04T14:51:27.301675+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0008_delete_phonedevice', datetime.datetime(2025, 4, 4, 14, 51, 27, 301675, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,303 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,303 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,327 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE TABLE "two_factor_webauthn_webauthndevice" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(64) NOT NULL, "confirmed" boolean NOT NULL, "throttling_failure_timestamp" timestamp with time zone NULL, "throttling_failure_count" integer NOT NULL CHECK ("throttling_failure_count" >= 0), "created_at" timestamp with time zone NOT NULL, "last_used_at" timestamp with time zone NULL, "public_key" text NOT NULL UNIQUE, "key_handle" text NOT NULL, "sign_count" integer NOT NULL, "user_id" integer NOT NULL); (params None)
2025-04-04 16:51:27,335 DEBUG django.db.backends utils 132449 137884488309632  (0.008) CREATE TABLE "two_factor_webauthn_webauthndevice" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(64) NOT NULL, "confirmed" boolean NOT NULL, "throttling_failure_timestamp" timestamp with time zone NULL, "throttling_failure_count" integer NOT NULL CHECK ("throttling_failure_count" >= 0), "created_at" timestamp with time zone NOT NULL, "last_used_at" timestamp with time zone NULL, "public_key" text NOT NULL UNIQUE, "key_handle" text NOT NULL, "sign_count" integer NOT NULL, "user_id" integer NOT NULL); args=None; alias=default
2025-04-04 16:51:27,336 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "two_factor_webauthn_webauthndevice" ADD CONSTRAINT "two_factor_webauthn__user_id_b4d137ec_fk_accounts_" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
2025-04-04 16:51:27,338 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "two_factor_webauthn_webauthndevice" ADD CONSTRAINT "two_factor_webauthn__user_id_b4d137ec_fk_accounts_" FOREIGN KEY ("user_id") REFERENCES "accounts_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
2025-04-04 16:51:27,338 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "two_factor_webauthn_webauthndevice_public_key_9946ab9c_like" ON "two_factor_webauthn_webauthndevice" ("public_key" text_pattern_ops); (params None)
2025-04-04 16:51:27,340 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "two_factor_webauthn_webauthndevice_public_key_9946ab9c_like" ON "two_factor_webauthn_webauthndevice" ("public_key" text_pattern_ops); args=None; alias=default
2025-04-04 16:51:27,340 DEBUG django.db.backends.schema schema 132449 137884488309632  CREATE INDEX "two_factor_webauthn_webauthndevice_user_id_b4d137ec" ON "two_factor_webauthn_webauthndevice" ("user_id"); (params None)
2025-04-04 16:51:27,342 DEBUG django.db.backends utils 132449 137884488309632  (0.002) CREATE INDEX "two_factor_webauthn_webauthndevice_user_id_b4d137ec" ON "two_factor_webauthn_webauthndevice" ("user_id"); args=None; alias=default
2025-04-04 16:51:27,344 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,345 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor_webauthn', '0001_initial', '2025-04-04T14:51:27.344351+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor_webauthn', '0001_initial', datetime.datetime(2025, 4, 4, 14, 51, 27, 344351, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,346 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,362 DEBUG django.db.backends utils 132449 137884488309632  (0.002) 
            SELECT
                c.conname,
                array(
                    SELECT attname
                    FROM unnest(c.conkey) WITH ORDINALITY cols(colid, arridx)
                    JOIN pg_attribute AS ca ON cols.colid = ca.attnum
                    WHERE ca.attrelid = c.conrelid
                    ORDER BY cols.arridx
                ),
                c.contype,
                (SELECT fkc.relname || '.' || fka.attname
                FROM pg_attribute AS fka
                JOIN pg_class AS fkc ON fka.attrelid = fkc.oid
                WHERE fka.attrelid = c.confrelid AND fka.attnum = c.confkey[1]),
                cl.reloptions
            FROM pg_constraint AS c
            JOIN pg_class AS cl ON c.conrelid = cl.oid
            WHERE cl.relname = 'two_factor_webauthn_webauthndevice' AND pg_catalog.pg_table_is_visible(cl.oid)
        ; args=['two_factor_webauthn_webauthndevice']; alias=default
2025-04-04 16:51:27,365 DEBUG django.db.backends utils 132449 137884488309632  (0.003) 
            SELECT
                indexname,
                array_agg(attname ORDER BY arridx),
                indisunique,
                indisprimary,
                array_agg(ordering ORDER BY arridx),
                amname,
                exprdef,
                s2.attoptions
            FROM (
                SELECT
                    c2.relname as indexname, idx.*, attr.attname, am.amname,
                    CASE
                        WHEN idx.indexprs IS NOT NULL THEN
                            pg_get_indexdef(idx.indexrelid)
                    END AS exprdef,
                    CASE am.amname
                        WHEN 'btree' THEN
                            CASE (option & 1)
                                WHEN 1 THEN 'DESC' ELSE 'ASC'
                            END
                    END as ordering,
                    c2.reloptions as attoptions
                FROM (
                    SELECT *
                    FROM
                        pg_index i,
                        unnest(i.indkey, i.indoption)
                            WITH ORDINALITY koi(key, option, arridx)
                ) idx
                LEFT JOIN pg_class c ON idx.indrelid = c.oid
                LEFT JOIN pg_class c2 ON idx.indexrelid = c2.oid
                LEFT JOIN pg_am am ON c2.relam = am.oid
                LEFT JOIN
                    pg_attribute attr ON attr.attrelid = c.oid AND attr.attnum = idx.key
                WHERE c.relname = 'two_factor_webauthn_webauthndevice' AND pg_catalog.pg_table_is_visible(c.oid)
            ) s2
            GROUP BY indexname, indisunique, indisprimary, amname, exprdef, attoptions;
        ; args=['btree', 'two_factor_webauthn_webauthndevice']; alias=default
2025-04-04 16:51:27,365 DEBUG django.db.backends.schema schema 132449 137884488309632  ALTER TABLE "two_factor_webauthn_webauthndevice" DROP CONSTRAINT "two_factor_webauthn_webauthndevice_public_key_key"; (params None)
2025-04-04 16:51:27,366 DEBUG django.db.backends utils 132449 137884488309632  (0.001) ALTER TABLE "two_factor_webauthn_webauthndevice" DROP CONSTRAINT "two_factor_webauthn_webauthndevice_public_key_key"; args=None; alias=default
2025-04-04 16:51:27,367 DEBUG django.db.backends.schema schema 132449 137884488309632  DROP INDEX IF EXISTS "two_factor_webauthn_webauthndevice_public_key_9946ab9c_like"; (params None)
2025-04-04 16:51:27,367 DEBUG django.db.backends utils 132449 137884488309632  (0.000) DROP INDEX IF EXISTS "two_factor_webauthn_webauthndevice_public_key_9946ab9c_like"; args=None; alias=default
2025-04-04 16:51:27,368 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor_webauthn', '0002_alter_webauthndevice_public_key', '2025-04-04T14:51:27.368052+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor_webauthn', '0002_alter_webauthndevice_public_key', datetime.datetime(2025, 4, 4, 14, 51, 27, 368052, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,370 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,371 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2025-04-04 16:51:27,374 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('two_factor', '0001_squashed_0008_delete_phonedevice', '2025-04-04T14:51:27.372816+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('two_factor', '0001_squashed_0008_delete_phonedevice', datetime.datetime(2025, 4, 4, 14, 51, 27, 372816, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,376 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('mozilla_django_oidc_db', '0001_initial_to_v015', '2025-04-04T14:51:27.374704+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('mozilla_django_oidc_db', '0001_initial_to_v015', datetime.datetime(2025, 4, 4, 14, 51, 27, 374704, tzinfo=datetime.timezone.utc)); alias=default
2025-04-04 16:51:27,403 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2025-04-04 16:51:27,404 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,405 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") SELECT * FROM UNNEST((ARRAY['auth','auth'])::varchar(100)[], (ARRAY['permission','group'])::varchar(100)[]) RETURNING "django_content_type"."id"; args=(['auth', 'auth'], ['permission', 'group']); alias=default
2025-04-04 16:51:27,407 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,408 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" IN ('permission', 'group')); args=('auth', 'permission', 'group'); alias=default
2025-04-04 16:51:27,412 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(1, 2); alias=default
2025-04-04 16:51:27,412 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,414 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add permission','Can change permission','Can delete permission','Can view permission','Can add group','Can change group','Can delete group','Can view group'])::varchar(255)[], (ARRAY[1,1,1,1,2,2,2,2])::integer[], (ARRAY['add_permission','change_permission','delete_permission','view_permission','add_group','change_group','delete_group','view_group'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add permission', 'Can change permission', 'Can delete permission', 'Can view permission', 'Can add group', 'Can change group', 'Can delete group', 'Can view group'], [1, 1, 1, 1, 2, 2, 2, 2], ['add_permission', 'change_permission', 'delete_permission', 'view_permission', 'add_group', 'change_group', 'delete_group', 'view_group']); alias=default
2025-04-04 16:51:27,416 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,417 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2025-04-04 16:51:27,418 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2025-04-04 16:51:27,419 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,420 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
2025-04-04 16:51:27,421 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,423 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" IN ('session')); args=('sessions', 'session'); alias=default
2025-04-04 16:51:27,425 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(3,); alias=default
2025-04-04 16:51:27,425 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,427 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add session','Can change session','Can delete session','Can view session'])::varchar(255)[], (ARRAY[3,3,3,3])::integer[], (ARRAY['add_session','change_session','delete_session','view_session'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add session', 'Can change session', 'Can delete session', 'Can view session'], [3, 3, 3, 3], ['add_session', 'change_session', 'delete_session', 'view_session']); alias=default
2025-04-04 16:51:27,428 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,429 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2025-04-04 16:51:27,431 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2025-04-04 16:51:27,431 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,432 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
2025-04-04 16:51:27,433 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,435 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" IN ('contenttype')); args=('contenttypes', 'contenttype'); alias=default
2025-04-04 16:51:27,437 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(4,); alias=default
2025-04-04 16:51:27,437 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,439 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add content type','Can change content type','Can delete content type','Can view content type'])::varchar(255)[], (ARRAY[4,4,4,4])::integer[], (ARRAY['add_contenttype','change_contenttype','delete_contenttype','view_contenttype'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add content type', 'Can change content type', 'Can delete content type', 'Can view content type'], [4, 4, 4, 4], ['add_contenttype', 'change_contenttype', 'delete_contenttype', 'view_contenttype']); alias=default
2025-04-04 16:51:27,440 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,441 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2025-04-04 16:51:27,443 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_otp'; args=('django_otp',); alias=default
2025-04-04 16:51:27,445 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_otp'; args=('django_otp',); alias=default
2025-04-04 16:51:27,446 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'otp_static'; args=('otp_static',); alias=default
2025-04-04 16:51:27,447 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,448 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") SELECT * FROM UNNEST((ARRAY['otp_static','otp_static'])::varchar(100)[], (ARRAY['staticdevice','statictoken'])::varchar(100)[]) RETURNING "django_content_type"."id"; args=(['otp_static', 'otp_static'], ['staticdevice', 'statictoken']); alias=default
2025-04-04 16:51:27,449 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,450 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'otp_static' AND "django_content_type"."model" IN ('statictoken', 'staticdevice')); args=('otp_static', 'statictoken', 'staticdevice'); alias=default
2025-04-04 16:51:27,453 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5, 6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(5, 6); alias=default
2025-04-04 16:51:27,453 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,455 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add static device','Can change static device','Can delete static device','Can view static device','Can add static token','Can change static token','Can delete static token','Can view static token'])::varchar(255)[], (ARRAY[5,5,5,5,6,6,6,6])::integer[], (ARRAY['add_staticdevice','change_staticdevice','delete_staticdevice','view_staticdevice','add_statictoken','change_statictoken','delete_statictoken','view_statictoken'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add static device', 'Can change static device', 'Can delete static device', 'Can view static device', 'Can add static token', 'Can change static token', 'Can delete static token', 'Can view static token'], [5, 5, 5, 5, 6, 6, 6, 6], ['add_staticdevice', 'change_staticdevice', 'delete_staticdevice', 'view_staticdevice', 'add_statictoken', 'change_statictoken', 'delete_statictoken', 'view_statictoken']); alias=default
2025-04-04 16:51:27,456 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,457 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'otp_static'; args=('otp_static',); alias=default
2025-04-04 16:51:27,459 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'otp_totp'; args=('otp_totp',); alias=default
2025-04-04 16:51:27,459 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,460 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('otp_totp', 'totpdevice') RETURNING "django_content_type"."id"; args=('otp_totp', 'totpdevice'); alias=default
2025-04-04 16:51:27,461 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,463 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'otp_totp' AND "django_content_type"."model" IN ('totpdevice')); args=('otp_totp', 'totpdevice'); alias=default
2025-04-04 16:51:27,465 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(7,); alias=default
2025-04-04 16:51:27,465 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,467 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add TOTP device','Can change TOTP device','Can delete TOTP device','Can view TOTP device'])::varchar(255)[], (ARRAY[7,7,7,7])::integer[], (ARRAY['add_totpdevice','change_totpdevice','delete_totpdevice','view_totpdevice'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add TOTP device', 'Can change TOTP device', 'Can delete TOTP device', 'Can view TOTP device'], [7, 7, 7, 7], ['add_totpdevice', 'change_totpdevice', 'delete_totpdevice', 'view_totpdevice']); alias=default
2025-04-04 16:51:27,468 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,469 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'otp_totp'; args=('otp_totp',); alias=default
2025-04-04 16:51:27,471 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'two_factor_webauthn'; args=('two_factor_webauthn',); alias=default
2025-04-04 16:51:27,471 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,472 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('two_factor_webauthn', 'webauthndevice') RETURNING "django_content_type"."id"; args=('two_factor_webauthn', 'webauthndevice'); alias=default
2025-04-04 16:51:27,473 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,475 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'two_factor_webauthn' AND "django_content_type"."model" IN ('webauthndevice')); args=('two_factor_webauthn', 'webauthndevice'); alias=default
2025-04-04 16:51:27,477 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(8,); alias=default
2025-04-04 16:51:27,477 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,479 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add webauthn device','Can change webauthn device','Can delete webauthn device','Can view webauthn device'])::varchar(255)[], (ARRAY[8,8,8,8])::integer[], (ARRAY['add_webauthndevice','change_webauthndevice','delete_webauthndevice','view_webauthndevice'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add webauthn device', 'Can change webauthn device', 'Can delete webauthn device', 'Can view webauthn device'], [8, 8, 8, 8], ['add_webauthndevice', 'change_webauthndevice', 'delete_webauthndevice', 'view_webauthndevice']); alias=default
2025-04-04 16:51:27,480 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,481 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'two_factor_webauthn'; args=('two_factor_webauthn',); alias=default
2025-04-04 16:51:27,482 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'ordered_model'; args=('ordered_model',); alias=default
2025-04-04 16:51:27,485 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'ordered_model'; args=('ordered_model',); alias=default
2025-04-04 16:51:27,486 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin_index'; args=('admin_index',); alias=default
2025-04-04 16:51:27,487 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,488 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "django_content_type" ("app_label", "model") SELECT * FROM UNNEST((ARRAY['admin_index','admin_index','admin_index'])::varchar(100)[], (ARRAY['appgroup','applink','contenttypeproxy'])::varchar(100)[]) RETURNING "django_content_type"."id"; args=(['admin_index', 'admin_index', 'admin_index'], ['appgroup', 'applink', 'contenttypeproxy']); alias=default
2025-04-04 16:51:27,489 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,491 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin_index' AND "django_content_type"."model" IN ('appgroup', 'applink', 'contenttypeproxy')); args=('admin_index', 'appgroup', 'applink', 'contenttypeproxy'); alias=default
2025-04-04 16:51:27,493 DEBUG django.db.backends utils 132449 137884488309632  (0.001) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (9, 10, 11) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(9, 10, 11); alias=default
2025-04-04 16:51:27,493 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,495 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add application group','Can change application group','Can delete application group','Can view application group','Can add application link','Can change application link','Can delete application link','Can view application link','Can add content type proxy','Can change content type proxy','Can delete content type proxy','Can view content type proxy'])::varchar(255)[], (ARRAY[9,9,9,9,10,10,10,10,11,11,11,11])::integer[], (ARRAY['add_appgroup','change_appgroup','delete_appgroup','view_appgroup','add_applink','change_applink','delete_applink','view_applink','add_contenttypeproxy','change_contenttypeproxy','delete_contenttypeproxy','view_contenttypeproxy'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add application group', 'Can change application group', 'Can delete application group', 'Can view application group', 'Can add application link', 'Can change application link', 'Can delete application link', 'Can view application link', 'Can add content type proxy', 'Can change content type proxy', 'Can delete content type proxy', 'Can view content type proxy'], [9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11], ['add_appgroup', 'change_appgroup', 'delete_appgroup', 'view_appgroup', 'add_applink', 'change_applink', 'delete_applink', 'view_applink', 'add_contenttypeproxy', 'change_contenttypeproxy', 'delete_contenttypeproxy', 'view_contenttypeproxy']); alias=default
2025-04-04 16:51:27,496 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,497 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin_index'; args=('admin_index',); alias=default
2025-04-04 16:51:27,499 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2025-04-04 16:51:27,499 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,500 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
2025-04-04 16:51:27,501 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,502 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" IN ('logentry')); args=('admin', 'logentry'); alias=default
2025-04-04 16:51:27,504 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(12,); alias=default
2025-04-04 16:51:27,505 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,505 DEBUG django.db.backends utils 132449 137884488309632  (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add log entry','Can change log entry','Can delete log entry','Can view log entry'])::varchar(255)[], (ARRAY[12,12,12,12])::integer[], (ARRAY['add_logentry','change_logentry','delete_logentry','view_logentry'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add log entry', 'Can change log entry', 'Can delete log entry', 'Can view log entry'], [12, 12, 12, 12], ['add_logentry', 'change_logentry', 'delete_logentry', 'view_logentry']); alias=default
2025-04-04 16:51:27,507 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,508 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2025-04-04 16:51:27,509 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_jsonform'; args=('django_jsonform',); alias=default
2025-04-04 16:51:27,511 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'django_jsonform'; args=('django_jsonform',); alias=default
2025-04-04 16:51:27,511 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'solo'; args=('solo',); alias=default
2025-04-04 16:51:27,514 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'solo'; args=('solo',); alias=default
2025-04-04 16:51:27,515 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'mozilla_django_oidc_db'; args=('mozilla_django_oidc_db',); alias=default
2025-04-04 16:51:27,515 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,515 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('mozilla_django_oidc_db', 'openidconnectconfig') RETURNING "django_content_type"."id"; args=('mozilla_django_oidc_db', 'openidconnectconfig'); alias=default
2025-04-04 16:51:27,516 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,517 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'mozilla_django_oidc_db' AND "django_content_type"."model" IN ('openidconnectconfig')); args=('mozilla_django_oidc_db', 'openidconnectconfig'); alias=default
2025-04-04 16:51:27,518 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (13) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(13,); alias=default
2025-04-04 16:51:27,519 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,519 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add OpenID Connect configuration','Can change OpenID Connect configuration','Can delete OpenID Connect configuration','Can view OpenID Connect configuration'])::varchar(255)[], (ARRAY[13,13,13,13])::integer[], (ARRAY['add_openidconnectconfig','change_openidconnectconfig','delete_openidconnectconfig','view_openidconnectconfig'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add OpenID Connect configuration', 'Can change OpenID Connect configuration', 'Can delete OpenID Connect configuration', 'Can view OpenID Connect configuration'], [13, 13, 13, 13], ['add_openidconnectconfig', 'change_openidconnectconfig', 'delete_openidconnectconfig', 'view_openidconnectconfig']); alias=default
2025-04-04 16:51:27,520 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,521 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'mozilla_django_oidc_db'; args=('mozilla_django_oidc_db',); alias=default
2025-04-04 16:51:27,521 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'axes'; args=('axes',); alias=default
2025-04-04 16:51:27,522 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,522 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_content_type" ("app_label", "model") SELECT * FROM UNNEST((ARRAY['axes','axes','axes'])::varchar(100)[], (ARRAY['accessattempt','accesslog','accessfailurelog'])::varchar(100)[]) RETURNING "django_content_type"."id"; args=(['axes', 'axes', 'axes'], ['accessattempt', 'accesslog', 'accessfailurelog']); alias=default
2025-04-04 16:51:27,523 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,523 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'axes' AND "django_content_type"."model" IN ('accessfailurelog', 'accesslog', 'accessattempt')); args=('axes', 'accessfailurelog', 'accesslog', 'accessattempt'); alias=default
2025-04-04 16:51:27,524 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (16, 14, 15) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(16, 14, 15); alias=default
2025-04-04 16:51:27,525 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,526 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add access attempt','Can change access attempt','Can delete access attempt','Can view access attempt','Can add access log','Can change access log','Can delete access log','Can view access log','Can add access failure','Can change access failure','Can delete access failure','Can view access failure'])::varchar(255)[], (ARRAY[14,14,14,14,15,15,15,15,16,16,16,16])::integer[], (ARRAY['add_accessattempt','change_accessattempt','delete_accessattempt','view_accessattempt','add_accesslog','change_accesslog','delete_accesslog','view_accesslog','add_accessfailurelog','change_accessfailurelog','delete_accessfailurelog','view_accessfailurelog'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add access attempt', 'Can change access attempt', 'Can delete access attempt', 'Can view access attempt', 'Can add access log', 'Can change access log', 'Can delete access log', 'Can view access log', 'Can add access failure', 'Can change access failure', 'Can delete access failure', 'Can view access failure'], [14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16], ['add_accessattempt', 'change_accessattempt', 'delete_accessattempt', 'view_accessattempt', 'add_accesslog', 'change_accesslog', 'delete_accesslog', 'view_accesslog', 'add_accessfailurelog', 'change_accessfailurelog', 'delete_accessfailurelog', 'view_accessfailurelog']); alias=default
2025-04-04 16:51:27,526 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,527 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'axes'; args=('axes',); alias=default
2025-04-04 16:51:27,527 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'accounts'; args=('accounts',); alias=default
2025-04-04 16:51:27,528 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,528 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('accounts', 'user') RETURNING "django_content_type"."id"; args=('accounts', 'user'); alias=default
2025-04-04 16:51:27,529 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,529 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'accounts' AND "django_content_type"."model" IN ('user')); args=('accounts', 'user'); alias=default
2025-04-04 16:51:27,530 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "auth_permission"."content_type_id" AS "content_type", "auth_permission"."codename" AS "codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (17) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, 2 ASC; args=(17,); alias=default
2025-04-04 16:51:27,530 DEBUG django.db.backends utils 132449 137884488309632  (0.000) BEGIN; args=None; alias=default
2025-04-04 16:51:27,531 DEBUG django.db.backends utils 132449 137884488309632  (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT * FROM UNNEST((ARRAY['Can add user','Can change user','Can delete user','Can view user'])::varchar(255)[], (ARRAY[17,17,17,17])::integer[], (ARRAY['add_user','change_user','delete_user','view_user'])::varchar(100)[]) RETURNING "auth_permission"."id"; args=(['Can add user', 'Can change user', 'Can delete user', 'Can view user'], [17, 17, 17, 17], ['add_user', 'change_user', 'delete_user', 'view_user']); alias=default
2025-04-04 16:51:27,532 DEBUG django.db.backends utils 132449 137884488309632  (0.001) COMMIT; args=None; alias=default
2025-04-04 16:51:27,532 DEBUG django.db.backends utils 132449 137884488309632  (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'accounts'; args=('accounts',); alias=default
